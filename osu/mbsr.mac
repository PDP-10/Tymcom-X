TITLE MBSR.    MAG TAPE BACKSPACE RECORD FORTRAN IV
SUBTTL	V32(367)	7-MAR-72
;***COPYRIGHT 1969,1970,1971,1972 DIGITAL EQUIPMENT CORP., MAYNARD, MASS.***

IFNDEF HPWFIX,<HPWFIX==1>	 ;INCLUDE FIXES H. P. WEISS 10/18/71

;REENT==1 GIVES RE-ENTRANT FORTRAN OP SYSTEM
IFNDEF REENT,<REENT==0>
IFN REENT,<	HISEG	>

;THIS ROUTINE WILL BACKSPACE ONE LOGICAL RECORD ON MAGNETIC TAPE,
;BOTH ASCII AND BINARY RECORDS.
;ACCUMULATOR D CONTAINS CODE FOR BACKSPACE MTAPE COMMAND

;THE ROUTINE IS CALLED BY "TPFCN."  .

ENTRY	MBSR.
EXTERN	FI.,NXTLN.,LOOK.,CLOS.,FNCTN.,WAIT.,STAT.,TPFCN.,MTPZ.
EXTERN	SESTA.,INP.,REDER.,CLOSI.,BPHSE.,CLRSY.,CLROU.,PARER.
EXTERN	INCNT.,BLOCK.,FCM1.,TNAME.,TEMP.,IOERR.,USETI.

;ACCUMULATORS
	A=1			;UTILITY
	B=2			;UTILITY
	C=3			;UTILITY
	D=4			;UTILITY
	E=5			;FLAGS
	F=6			;FLAG REGISTER
	G=15			;INPUT BUFFER HDR ADDR(LH);DEV NAME ADDR(RH)
	H=10			;UTILITY
	I=11			;FLAG REGISTER
	M=7			;ADDR OF BUFFER HEADER
	P=17			;PUSHDOWN POINTER

IFN REENT,<LOW=16>
IFE REENT,<LOW=0>

MLON


;PARAMETER ASSIGNMENTS
	LF=12			;LINE FEED
	IOCON=40		;CONTINUOUS I-O
	IODEND=20000		;END OF FILE
	IOBOT=4000		;BEGINNING OF TAPE

;CHECK FOR ASCII PACKED RECORD

MBSR.:	LDB	A,[POINT 4,M,12]	;GET CHAN #
	IFN REENT, <ADDI A,(LOW)>
	MOVE	A,INCNT.(A)
	MOVEM	A,BLOCK.(LOW)		;GET # OF INPUTS DONE ON CHAN.
	MOVE	C,M		;SAVE BUFFER HEADER POINTER
	MOVE	B,(G)		;DEVICE NAME WORD
	TRNE	B,2		;OUTPUT LAST?
	ADDI	C,3		;SET TO OUTPUT BUFFER
MBSR0:	HLRZ	0,1(C)		;POINTER SIZE AND POSITION
	ANDI	0,7700		;GET SIZE
	CAIN	0,4400		;BINARY?
	JRST	MBSR1		;YES
	HRRZ	0,(C)		;BUFFER POINTER
	SKIPG	2(C)		;ITEM COUNT .LE. 0?
	JUMPE	0,MBSR1		;YES,INIT JUST DONE?
BEGP:	HRLI	0,350700	;NO,FORM PNTR TO BEG. OF BUFFER
	ADDI	0,2		;SET TO FIRST CHARACTER
	CAMN	0,1(C)		;COMPARE WITH ACTUAL POINTER
	JRST	PNC		;BACKSPACED UP TO BEG. OF BUFFER

;BACKSPACE POINTER TO BEGINNING OF PREVIOUS LINE

	TRNN	B,2		;OUTPUT LAST?
	JRST	NOTOUT		;NO
OLREC:	PUSHJ	P,SUB1		;CLOSE TAPE
BLREC:	PUSHJ	P,SUB2		;INPUT BACKSPACED REC.
	MOVE	0,1(M)		;RESTORE AC 0
	MOVE	A,2(M)		;ITEM COUNT
	IDIVI	A,5		;NO. OF WORDS IN BUFFER
	MOVE	C,1(M)		;BEG. OF BUFFER
	ADD	C,A		;DEPTH IN BUFFER
	TLO	C,010000	;SET TO RIGHT MOST CHAR.
	MOVEM	C,1(M)		;RESTORE PNTR.
	SETZM	2(M)		;CLEAR ITEM COUNT
NOTOUT:	MOVSI	A,470000	;POSITION DECREMENT BY 7 BITS
; THE 4 IS OVERFLOW PREVENTION AT BACKSP
	MOVE	C,1(M)		;CURRENT POINTER
	LDB	B,C		;GET LAST CHARACTER
	IFN HPWFIX,<
	TLO	0,010000	;FIX - 10/18/71 - H. P. WEISS
				; MAKES COMPARE AT BACKSP+5 WORK
	>
	CAIN	B,LF		;LINE FEED?
	TLO	I,20000		;YES,SET FLAG
BACKSP:	ADD	C,A		;BACKSPACE POINTER
	TLC	C,(1B0)		;CCOMPENSATE FOR ADDING 470000 TO BYTE 
				; POINTER FOR ARITH OVERFLOW PREVENTION
	TLNE	C,400000	;WORD-1?
	ADD	C,[XWD 347777,-1];YES
	AOS	2(M)		;INCREMENT ITEM COUNT
	CAMN	0,C		;POINTING TO 1ST CHARACTER
	JRST	ADV		;YES
	LDB	B,C		;LOOK AT THIS CHARACTER
	CAIE	B,LF		;IS IT A LINE FEED?
	JRST	BACKSP		;NO,BACK UP MORE
	TLON	I,20000		;1ST LINE FEED?
	JRST	BACKSP		;YES,KEEP GOING BACKWARDS
	MOVEM	C,1(M)		;STORE UPDATED POINTER
	PUSHJ	P,NXTLN.	;ADVANCE TO BEG. OF NEXT LINE
	JRST	CFLGS1		;LEAVE
ADV:	MOVEM	C,1(M)		;RESTORE POINTER
	IFN HPWFIX,<
	IBP	1(M)		;FIX - H. P. WEISS - 10/18/71
				;ADVANCE POINTER PAST FIRST CHARACTER
	>
	JRST	CFLGS1		;CLEAR FLAGS AND RETURN

MBSR1:	MOVEI	A,1		;ASSUME ASCII RECORD
	MOVEI	H,1		;NO. OF BUFFERS-1
	HLRZ	C,G		;ADDR. OF INPUT BUFFER
	SKIPE	2(C)		;TEST FOR USER SYS SYNCH
	JRST	NSYNC		;INPUT LAST--NOT SYNC
	MOVE	B,(G)		;DEVICE NAME WORD
	PUSHJ	P,SUB1		;BACKSPACE TAPE
	TRNE	F,IOBOT		;BEGINNING OF TAPE?
	JRST	NOBOT		;YES,QUIT
	PUSHJ	P,SUB2		;INPUT BACKSPACED RECORD
	TRNN	F,IODEND	;END OF FILE?
	JRST	NSYNC1		;NO
	PUSHJ	P,CLOSI.	;DO INPUT CLOSE TO CLEAR EOF BIT
	JRST	ASCREC		;BACKSPACE
NSYNC:	PUSHJ	P,CLOSI.	;INPUT CLOSE
NSYNC1:	HRRZ	C,(M)		;ADDR. OF BUFFER
	MOVE	C,2(C)		;CONTROL WORD
	TLNE	C,760000	;TEST FOR FORMAT
	JRST	ASET		;ASCII RECORD
	HRRZ	A,C		;PICK UP RECORD COUNT
	JUMPE	A,BPHSE.	;BIN. RECORD OUT OF PHASE
	SKIPGE	I		;IF INPUT DONE
ASCREC:	ADD	A,H		;NO. OF RECORDS TO BACK UP
PPF:	PUSHJ	P,BLKBAK	;DO BACKSPACE
	CAIN	A,1		;LAST BACKSPACE
	JRST	NOBOT		;YES
	PUSHJ	P,STAT.		;GET STATUS
	TRNE	F,IOBOT		;BOT?
	PUSHJ	P,BPHSE.	;BINARY RECORD OUT OF PHASE
	SOJG	A,PPF		;NEXT BACKSPACE
NOBOT:	PUSHJ	P,CLRSY.	;CLEAR USER-SYS SYNCH FLAG
	PUSHJ	P,STAT.		;GET STATUS
;	TRZ	F,IODEND+IOCON	;NO EOF,CONT. I-O
	TRZ	F,IODEND	; *260* TEMP FIX
	PUSHJ	P,SESTA.	;SET STATUS
	IFN HPWFIX,<
;
; MAKE CHANGING THE BYTE POINTER TO BINARY CONDITIONAL
; ON THE MODE IN WHICH THE DEVICE IS CURRENTLY INITED
;
; OTHERWISE - THE ASCII BYTE POINTER IS CLOBBERED IF
; A BACKSPACE IS THE FIRST OPERATION ON THE CHANNEL
;
	MOVE	0,F		;MOVE STAUS INTO 0
	ANDI	0,17		;MODE IS LAST FOUR BITS
	CAIG	0,1		;MODE GT 1 IMPLIES BINARY MODE
	JRST	CFLGS1		;SKIP IF NOT ASCII MODE
	>
	HRRI	0,004400	;SET UP
	HRLM	0,1(M)		;       FOR BINARY POINTER
CFLGS1:	PUSHJ	P,CLROU.	;CLEAR OUTPUT-LAST FLAG
	JRST	FI.		;RETURN
SUB1:	TRNN	B,2		;OUTPUT LAST?
	JRST	DCL		;NO,DON'T CLOSE
	PUSHJ	P,CLOS.		;DO CLOSE
SUB3:	TLNN	E,200000	;DSK=> BACKSPACE ONCE ONLY
	PUSHJ	P,FNCTN.	;BACKSPACE 1
DCL:	PUSHJ	P,BLKBAK	;BACKSPACE 1
	PUSHJ	P,STAT.		;GET STATUS
	POPJ	P,

SUB2:	MOVEI	H,0		;SET FOR SINGLE BUFFER
	TRO	F,IOCON		;SET NON-CONT. I-O
	PUSHJ	P,SESTA.	;SET STATUS
	PUSHJ	P,INP.		;DO INPUT
	PUSHJ	P,MTPZ.		;I-O WAIT
	PUSHJ	P,STAT.		;GET STATUS
	TRNE	F,740000	;ERRORS?
	PUSHJ	P,IOERR.	;YES
	POPJ	P,

PNC:	TRNE	B,2		;OUTPUT LAST?
	JRST	OLREC		;CLOSE BACSP.,&INPUT
	PUSHJ	P,STAT.		;GET CURRENT STATUS
	TRNE	F,IOBOT		;ARE WE ALREADY AT BOT?
	JRST	CFLGS1		;YUP JUST RETURN
	PUSHJ	P,SUB3		;NO,JUST BACSP.&INPUT
	JRST	BLREC

ASET:	MOVE	C,M		;SAVE BUFFER HEADER POINTER
	JRST	BEGP		;GO BACKSPACE ASCII RECORD

BLKBAK:	TLNN	E,200000	;DSK?
	JRST	FNCTN.		;NO, MTA DO MTA FUNCTION
	LDB	A,[POINT 4,M,12];CHAN#
	MOVEI	D,INCNT.(A)	;SAVE INPUT COUNT ADDR FOR LATER UPDATE
IFN REENT,<ADDI D,(LOW)>
	ASH	A,1		;  *2.
	JUMPG	I,.+2		;SKIP ON INPUT
	ADDI	A,1
IFN REENT ,<ADDI A,(LOW)>
	SKIPN	TNAME.(A)	;IS THERE A NAME THERE?
	TLNE	I,(1B0)		;NO, BUT SKIP IF INPUT SET
	SKIPA	A,TNAME.(A)	;GET LAST INPUT NAME
	MOVE	A,TNAME.+1(A)	;TRY LAST OUTPUT NAME INSTEAD
	MOVEM	A,TEMP.+2(LOW)	;SET UP FILE NAME
	MOVSI	A,'DAT'
	MOVEM	A,TEMP.+3(LOW)	;SET EXT
	EXCH	A,C		;SAV AC C
	LDB	C,[POINT 4,M,12];SET UP AC'C' WITH CHAN#
	PUSHJ	P,FCM1.		;DO LOOKUP/ENTER AND CLOSE TO FLUSH BUFFERS
	EXCH	A,C		;RESTORE AC'C'
	SOSLE	A,BLOCK.(LOW)		;GET BLOCK BEFORE LAST INPUT
	PUSHJ	P,USETI.	;DO USETI ON IT IF .GT. 0
	MOVEM	A,(D)		;SETUP INCNT. TO BE THIS BLOCK.
	POPJ	P,		;RETURN

	END
