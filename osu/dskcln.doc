DSKCLN WILL RUN IN EITHER OF TWO MODES. THE FIRST JUST REPORTS
PROBLEMS, THE SECOND FIXES THEM. THE CURRENT MODE IS DETERMINED BY
FIXFLG (0=REPORT, NON-0=FIX).

AS A REMNANT OF PREVIOUS USAGE, DSKCLN PERFORMS IT OPERATIONS FOR
EITHER A PARTICULAR STRUCTURE, OR FOR EACH STRUCTURE ON THE SYSTEM.
THIS COULD BE IMPORTANT FOR MOUNTABLE STRUCTURES IN THE FUTURE.
THE ROUTINE FOR A GIVEN STRUCTURE IS CHKSTR.

DSKCLN BUILDS SOME TABLES FOR THE STRUCTURE IT IS PROCESSING. SEVERAL
OF THESE TABLES HAVE A LENGTH OF THE NUMBER OF UNITS IN THE STRUCTURE.
THESE ARE BUILT IN FREE CORE (AFTER JOBFF) AND POINTED TO BY A WORD WITH
U IN THE LEFT HALF. THIS IS SO THAT ENTRIES CAN BE REFERENCED AS
@<TABLE NAME> AFTER U IS LOADED WITH THE UNIT NUMBER. DSKCLN CHECKS THE
UNITS BY CONSTRUCTING THE LOGICAL NAMES (I.E. DSKB0, DSKB1, ...) AND
DOING A DSKCHR UUO. IT GENERATES STRPPU THE NUMBER OF BLOCKS IN THE
LARGEST UNIT ON THE BASIS OF THE DSKCHR INFORMATION.

THE TABLES BUILT ARE:

PTRPPU	BLOCKS ON THIS UNIT
PTRDST	DISK SATS (SEE BELOW)
PTRTST	TROUBLE SATS (SEE BELOW)
PTROST	OUT SATS (SEE BELOW)
PTRRST	RIB SATS (SEE BELOW)
PTRSAD	SAT ADDRESSES (SEE BELOW)
PTRUNU	UNIT IN USE (FOR OVERLAPPED SEEKS ON UFD PROCESSING)
PTRSWP	PAGES FOR SWAPPING ON UNIT
PTRSWB	FIRST BLOCK FOR SWAPPING ON UNIT

DSKCLN THEN READS THE HOME BLOCKS ON THE FIRST UNIT AND STORES DATA.
IT READS THE HOME BLOCKS ON THE OTHER UNITS AND CHECKS DATA FOR
CONSISTANCY. IT CHECKS HOMOVR, HOMSAT, HOMHMS, HOMSWP, HOMSUF,
HOMMFD, AND HOMHSH FOR CONSISTANCY. IT BUILDS PER-UNIT DATA IN 
PTRSWP AND PTRSWB AND THE LEFT HALF OF PTRDST (NUMBER OF SATS ON THIS
UNIT).


THERE ARE 5 TABLES FOR SAT INFORMATION. LET NSAT BE THE NUMBER OF
SATS ON UNIT U (AC U IS LOADED WITH UNIT NUMBER) AND NWORD BE THE
NUMBER OF WORDS PER SAT. THE FOLLOWING IS THE INFORMATION OBTAINED
WITH HRR AC,@,<TABLE ADDRESS>:

PTRSAD	THE ADDRESS OF AN NSAT LENGTH TABLE. THE NTH ENTRY OF
	THE TABLE POINTED TO HAS THE DISK ADDRESS OF THE NTH SAT
	PAGE ON THIS UNIT.
PTRDST	THE ADDRESS OF AN NSAT*NWORD LENGTH TABLE. THE SATS FROM THIS
	UNIT ARE READ INTO THIS TABLE AS IF THEY WERE ONE CONTIGUOUS
	BLOCK ON THE DISK.
PTROST	A POINTER TO AN NSAT*NWORD LENGTH TABLE
PTRTST
PTRRST

IN THE CURRENT IMPLIMENTATION, NWORD IS FORCED TO 1000(OCTAL) OR 1 PAGE.
WHEN DISK SATS ARE READ IN AND THEIR ADDRESSES RECORDED, THE RIB FOR
SAT.SYS IS SEARCHED (ADDRESS OF RIB FROM HOME BLOCK) FOR THE CORRECT
NUMBER OF POINTERS. THE POINTERS ARE NOT REQUIRED TO BE CONTIGUOUS
BUT IT IS ASSUMED THAT THE NTH POINTER FOUND FOR THAT UNIT WILL BE
THE ADDRESS OF THE SAT CONTAINING THE BITS FOR THE NTH "SAT WORTH"
OF DISK. (I.E. THE PAGE ADDRESS OF A BIT IN A SAT IS DEPENDENT ON
THE ORDER OF THE POINTERS FOR THAT UNIT IN SAT.SYS RIB AND NOT THE
ADDRESS AT WHICH THAT SAT IS FOUND). 
AN ERROR WILL BE INDICATED IF MORE POINTERS ARE FOUND FOR A GIVEN UNIT
THAN SHOULD BE THERE. THIS ERROR IS FATAL (THE SAME ERROR OCCURS IF
THERE ARE TOO FEW POINTERS.

THE USES OF THE SAT IMAGES ARE AS FOLLOWES:

PTRDST	AN IMAGE OF THE SATS ON THE DISK. THIS IS USED ONLY IN THE
	REPORTING MODE TO INDICATE FREE AND LOST PAGES.
PTROST	AN IMAGE CREATED AS DSKCLN RUNS (IN FIX MODE). THIS IS THE
	DATA WHICH WILL BE WRITTEN INTO THE SAT PAGES WHEN DSKCLN
	FINISHES.
PTRRST	THE APPROPRIATE BIT IS SET (ACTUALLY RESET) IN THIS TABLE
	FOR EACH PRIME RIB. THIS IS DESIGNED TO FIND TWO UFD ENTRIES
	WITH EXACTLY THE SAME NAME, WHICH POINT TO THE SAME PRIME RIB.
	(INSTEAD OF GENERATING MULTIPLE USE ERRORS).
PTRTST	THIS IS THE TABLE USED FOR MULTIPLE USE ERRORS. WHENEVER AN
	ATTEMPT IS MADE TO RESET A BIT IN PTROST WHICH IS ALREADY
	RESET, THIS PAGE MUST BE MULTIPLY USED. THIS FINDS THE SECOND
	AND ALL SUBSIQUENT REFERENCES TO THIS PAGE BUT NOT THE FIRST.
	IN THIS CASE A BIT IS RESET IN PTRTST FOR THIS PAGE, AND A FLAG
	TRBFLG IS SET NON-0. A SECOND PASS IS THEN MADE AND FOR EACH
	PAGE, PTRTST IS CHECKED TO FIND ALL REFERENCES TO MULTIPLY USED
	PAGES.
WHEN DSKCLN IS IN FIX MODE, IT MAKES A PASS (OR 2 PASSES IF ANY
MULTIPLE USE PAGES) THROUGH THE DISK AND GENERATES A LIST OF ALL
THINGS WHICH NEED FIXING. THIS IS A LINKED LIST POINTED TO BY
FIXPTR. EACH BLOCK OF THIS LIST HAS THE FORMAT:

WORD 0	L.H. POINTER TO NEXT ELEMENT OF THE LIST
	R.H. THE ADDRESS-1 OF THE FIXUP ROUTINE FOR THIS ERROR. TO BE
		CALLED WITH A PUSHJ P,

WORD 1	DISK ADDRESS OF THE PAGE NEEDING FIXING

WORD 2	A VALUE TO BE LOADED INTO AC T2 FOR THE FIXUP ROUTINE FOR THIS
	ERROR

WORD 3	A VALUE TO BE LOADED INTO AC T3 FOR THE FIXUP ROUTINE FOR THIS
	ERROR

THIS IS DONE SO THAT MULTIPLE USE PAGES CAN BE CHECKED FOR BEFORE
ANYTHING IS DONE TO THE DISK (FIXUP ROUTINES MAY PERFORM DIFFERENT
FUNCTIONS IF MULTIPLE USE PAGES ARE PRESENT).
ACTUAL PROCESSING INVOLVES READING THE MFD AND FOR EACH UFD IN
THE MFD, READING THE UFD AND FOR EACH FILE IN THE UFD, EXAMINING
THAT FILE. CONTROL IS ACOMPLISED BY HAVING A CONTROL TABLE FOR
EACH LEVEL (MFD, UFD, FILE). EACH OF THESE CONTROL TABLES IS THE
SAME.

RIBLBN	DISK ADDRESS OF THE RIB (PRIME) FOR MFD UFD OR FILE
NXTPTR	DISK ADDRESS OF THE BLOCK BEING PROCESSES (USED ONLY FOR
	SETTING SAT BITS FOR FILES, FOR READING DATA IN UFD AND MFD)
UFDPTR	A POINTER TO THE ENTRY FOR THIS ELEMENT IN THE NEXT LEVEL UP
	(UFD ENTRY FOR FILE, MFD ENTRY FOR UFD, UNUSED FOR MFD).
UFDOGP	A POINTER TO THE START OF THE CORE IMAGE OF THE UFD PAGE
	WHICH UFDPTR POINTS TO (USED IF ENTRY NEEDS DELETING (RIB
	ERROR ETC)).
ROUTIN	THE ADDRESS OF THE ROUTINE TO CALL TO PROCESS THE NEXT LEVEL
	OF ENTRY (UFD ROUTINE IN MFD BLOCK, FILE ROUTINE IN UFD BLOCK.
	FOR THE FILE CONTROL BLOCK, THIS IS A SPECIAL ROUTINE FOR EACH
	PAGE OF THE FILE PROCESSED TO ALLOW CHECKING OF SPECIAL FILES
	SUCH AS HOME.SYS, SAT.SYS, ETC)
SAVRIB	1000(OCTAL) WORDS, A COPY OF THE RIB IS SAVED HERE
DEVRSU	A POINTER INTO THE SAVRIB BLOCK POINTING TO THE DISK POINTER
	FOR THE DATA CURRENTLY BEING PROCESSED.
DEVREL	LOGICAL PAGE NUMBER OF PAGE POINTED TO BY DEVRSU
SAVBLK	POINTER TO A 1 PAGE BUFFER TO SAVE THE BLOCK CURRENTLY BEING
	PROCESSED (FOR MFD AND UFD, 0 FOR FILE)
UFDBKF	A 2 WORD BLOCK FOR A FIXING LIST FOR CHANGES NEEDED TO THE
	UFD (MFD) ENTRY FOR THIS FILE (UFD). WILL BE MERGED INTO
	FIXPTR LATER
UFDUSD	A WORD TO KEEP TRACK OF THE USED PGE COUNT FOR A UFD (MFD)
FIXRBP	A 2 WORD BLOCK FOR A FIXING LIST FOR CHANGES TO THE RIB
UFDLSD	A FLAG THAT THIS UFD HAS LOST DATA (RIB ERRORS)
ERRNAM	A NAME FOR ERROR PRINTING
ERREXT	EXTENSION
ERRPPN	A PPN (THESE HAVE THE NAME EXTENSION AND PPN OF THE CRRENT
	FILE, MFD, OR UFD).
UFDHSP	A POINTER INTO THE HASH TABLE FOR THE UFD
	L.H. IS THE HASH NUMBER FOR THIS BLOCK
	R.H. POINTS TO A HASH TABLE FOR THE UFD WHICH KEEPS TRACK OF
		THE CORRECTNESS OF THE UFD LINKS
SIZRIB	COUNTS PAGES IN FILE (INCLUDING HOLES) FOR CHECKING RIBSIZ
ALCRIB	COUNTS PAGES IN FILE (EXCLUDING HOLES) FOR CHECKING RIBALP
