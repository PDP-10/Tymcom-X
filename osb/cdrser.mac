TITLE	CDRSER - CARD READER SERVICE FOR PDP-10(CR-10) - V020
SUBTTL	T. WACHS/TW/CF  TS  15 OCT 70

	STOPCD(,ENTRY,CDRSER)

IFNCPU(<KI,KL>),<PRINTX CDRSER works only on KI and KL>

CDRDDB:	PHASE	0		;TO DEFINE DDB
DEVNAM:	SIXBIT	/CDR/		;NAME
DEVCHR:	XWD	5*HUNGST,34	;CHARACERISTICS
DEVIOS:	0			;I/O STATUS
DEVSER:	EXP	CDRDSP		;SERVICE ROUTINE DISPATCH TABLE
DEVMOD:	XWD	DVCDR+DVIN,14403;
DEVLOG:	0
DEVBUF:	0
DEVIAD:	0
DEVOAD:	0
DEVCLS:	XWD	00,CDRBUF	;CLASS AND MONITOR BUFFER LOCATION
DEVSTS:	0
DEVPWC:	XWD	CDRBL/2,0	;WAKE UP BUFFER COUNT AND PARTIAL WORD COUNT
DEVWUC:	0			;ACTIVE WAKE UP COUNT
DEVCTR:	0
DEVINT:	0
	DEPHASE
  CDRIOS=CDRDDB+DEVIOS
  CDRIAD=CDRDDB+DEVIAD
  CDRPTR=CDRDDB+DEVOAD
  CDRSTS=CDRDDB+DEVSTS
  CDRCTR=CDRDDB+DEVCTR
CDRCHK:	0
SIZCDR==.-CDRDDB
;
;  MONITOR BUFFER DEFINITION
;
  CDRBL=200			;LENGTH
	XWD	CDRBUF,CDRBUF	;IN AND OUT
	EXP	CDRBUF+CDRBL	;LAST
CDRBUF:	BLOCK	CDRBL
;
	EXTERN	ADVBFF,CDRCHN,CDRRET,CDRSAV,CDRBTS,CKS12,HNGSTP
	EXTERN CBLAMB
	EXTERN	ERRICO,NEWBF1,SETIOD,STOIOS,CLRACT,ADRERR,CTMBS
	EXTERN	CBLEMB,MBBXFR
CDR==150
;CDRBTS=1670+CDRCHN.... CONO TO READ A CARD
COD029==5252		;12-0-2-4-6-8
COD026==4242		;12-2-4-8
CODEOF==7400		;12-11-0-1

;BITS IN LH OF S
COLUM1==400000
COLUM2==200000
CR029==100000
FORGET==40000
IGNRBT==20000

INTERNAL CDRDDB,CDRINT
;DISPATCH TABLE

CDRDSP:	PHASE 0
DDXZ:	DSPSIZ
DDINT:	POPJ P,
DBYT:	4400,,4400
DVSIZ:	MOVEI T1,SIZCDR
DINI:	JRST CDRREL
DHNG:	JRST CDRREL
DRL:	JRST CDRREL
DCL:	JRST ERRICO
DOU:	JRST ERRICO
DIN:	JRST CD.SER
DXFR:	JRST MBBXFR
	DSPSIZ==.-1

	DEPHASE
;Device INPUT routine
CD.SER:	CONSZ	CDR,-1		;IF NOT DURING INTERVAL BETWEEN EOC AND NEXT
	CONSZ	CDR,140		;CARD IS IT READY-TO-READ OR EOF?
	JRST	CDSET		;YES
	PUSHJ	P,HNGSTP	;"DEVICE CDR OK?"
	JRST	CD.SER		;TRY AGAIN IF CONTINUE TYPED
CDSET:	TLNN	S,IOBEG	;FIRST TIME THROUGH?
	JRST	CDRGO		;NO
	TLZ	S,CR029+FORGET+IGNRBT ;YES. SET UP FOR 1ST TIME
	MOVSI	T2,700	;SET UP FOR ASCII CARDS
	TRNE	S,10		;REALLY ASCII?
	MOVSI	T2,1400	;BINARY, BYTE SIZE = 12
	MOVEM	T2,CDRPTR	;SET BYTE SIZE
CDRGO:	PUSHJ	P,CTMBS		;COMPUTE MB SPACE LEFT
	LDB T4,[POINT 6,CDRPTR,11]; GET BYTE SIZE
	IMULI	T1,^D36		
	IDIV	T1,T4		;COMPUTE NUMBER OF ITEMS THAT WILL FIT
	CAIG	T1,^D82		;ROOM FOR 80 COLS. ?
	JRST	CDRREL		;NO. STOP READING
	TLZN	S,IOBEG	
	JRST	CDRGO1
	PUSHJ	P,CBLAMB	;GET LENGTH AND LOC. OF NEXT BLOCK
	SUBI	T2,1		;ADJUST ADDRESS FOR BYTE  POINTER
	HRRM	T2,CDRPTR
	IMUL	T1,T4		;COMPUTE ITEM COUNT
	MOVEM	T1,CDRCTR
CDRGO1:	TLNE	S,IOEND	;EOF?
	JRST	EOF		;YES. SHUT DOWN CDR
	CONSZ CDR,40		;EOF BUTTON PRESSED?
	JRST EOF		;YES-PROCESS IT NOW
	TLO	S,COLUM1+COLUM2 ;NO. INIT FOR COLUMN 1
	MOVEI	T1,770		;SET UP INTERRUPT LOC
	HRRM	T1,CDRINT
	MOVEI	T1,1670	;SET UP CONO FOR NEXT CARD
	CONSO	CDR,400100	;WAS TROUBLE ENCOUNTERED OR CARD READY?
	MOVEI	T1,370		;YES. SET CONO FOR READY-TO-READ
	CONO	CDR,CDRCHN(T1)	;START CARD READER
	TRO	S,IOACT	;CANT USE SETACT AS IT ZEROES IOW
	JRST	STOIOS		;WHICH MAY BE ON AFTER IGNORING A CARD
EXTERN	CDRCHL,CPOPJ

CDRINT:	CONSO	CDR,0		;INTERRUPT FOR CDR?
	JRST	.-1		;NO. GO AWAY
	CONI CDR,CDRSTS		;STORE CONI STATUS
	CONSZ	CDR,270		;MAYBE. A TRANSIENT INTERRUPT
	JRST	CDINT1		;YES. DEFINATELY FOR CDR
	CONSZ	CDR,200000	;NO. RDY-TO-RD ENABLED?
	CONSO	CDR,100		;AND READY-TO-READ ON?
	JRST	CHKTRB		;NO. CHECK FOR TROUBLE
	CONO	CDR,CDRBTS	;YES. TELL CDR TO START READING
	JEN	@CDRCHL		;AND DISMISS THE INTERRUPT
CHKTRB:	CONSZ	CDR,400000	;ENABLE FOR TROUBLE?
	CONSO	CDR,400		;AND TROUBLE OCCURRING?
	JRST	CDRINT+1	;NO. INTERRUPT IS NOT FOR CDR
CDINT1:	JSR	CDRSAV		;YES. SAVE ACS
	MOVEI	F,CDRDDB
	MOVE	S,CDRIOS	;RESTORE S
	CONSO	CDR,10		;DATA INTERRUPT?
	JRST	NTDATA		;NO
	DATAI	CDR,U		;YES. READ DATA
	TLNE	S,FORGET+IGNRBT ;PROCESS IT?
	JRST	CDRRET		;NO. DISMISS INTERRUPT
	TLZ	U,-1		;CLEAR L.H. IN CASE ECO CR10-00006 INSTALLED
	TLZE	S,COLUM1	;FIRST COLUMN?
	JRST	FSTCOL		;YES. MAKE SPECIAL CHECKS
CDRDIS:	TRNN	S,10		;ASCII?
	JRST	CDRASC		;YES. CONVERT TO ASCII
DISRET:	IBP	CDRPTR	;ADVANCE POINTER
	HRRZ	T1,DEVCLS(F)	;MB ADDRESS
	HRRZ	T2,CDRPTR
	CAMN	T2,-1(T1)	;NEW IN=LAST?
	MOVE	T2,T1		;YES. IN:=FIRST
	HRLM	T2,-2(T1)	;STORE NEW IN
	HRRM	T2,CDRPTR	;AND POINTER ADDRESS
	DPB	U,CDRPTR	;AND DEPOSITE DATA
	SOSLE	CDRCTR		;ROOM FOR MORE?
	POPJ	P,		;YES. EXIT
	PUSHJ	P,CBLAMB
	LDB T4,[POINT 6,CDRPTR,11]
	IMUL	T1,T4
	MOVEM	T1,CDRCTR
	POPJ	P,
STODIS:	MOVEM	S,CDRIOS	;SAVE S
	POPJ	P,		;AND EXIT
;HERE WHEN AN ASCII CHARACTER IS READ
CDRASC:	SETZB	T1,T2
	JUMPE	U,CDRAS2	;0-PICK UP AN ASCII BLANK
	CAIN	U,5000
	PUSHJ	P,CVT5
	CAIN	U,3000
	PUSHJ	P,CVT3
	LDB	T2,[XWD 110300,U]
	TRNE	U,3
	TRC	T2,7
	TRNE	U,74
	TRO	T2,10
	TRNE	U,314
	TRO	T1,2
	TRNE	U,525
	TRO	T1,1
	TLNN	S,CR029	;AN 029 CARD READ?
	TRO	T2,20		;NO. BUMP T2 TO 026 TABLE
CDRAS2:	LDB	U,CRCVPT(T1)	;PICK UP ASCII CHAR FROM TABLE
	JRST	DISRET		;AND RETURN
CVT5:	MOVEI	U,4202	;CONVERT 12-0 TO 12-8-2 IF 026
	TLNE	S,CR029	;029?
	MOVEI	U,1006	;YES, THEN TO 0-8-7 IF 029
	POPJ	P,		;RETURN
CVT3:	MOVEI	U,2202	;CONVERT 11-0 TO 11-8-2 IF 026
	TLNE	S,CR029	;029?
	MOVEI	U,0202	;YES THEN TO 8-2 IF 029
	POPJ	P,		;RETURN
;HERE WHEN THE 1ST COLUMN OF A CARD HES BEEN READ
FSTCOL:	CAIN	U,CODEOF	;AN EOF CARD?
	TLNN	S,COLUM2	;MAYBE. COLUMN 1?
	SKIPA			;NO - NOT A REAL EOF
	JRST	EOFCRD		;YES. HANDLE IT
	TRNE	S,10		;ASCII CARD?
	JRST	NOTASC		;NO
	CAIN	U,COD026	;YES. IS IT AN 026 CARD?
	JRST	SET026		;YES. HANDLE IT
	CAIN	U,COD029	;NO. IS IT AN 029 CARD?
	TLO	S,CR029+FORGET ;TES. SET A BIT
SETIOS:	MOVEM	S,CDRIOS	;SAVE S
	TLNN	S,FORGET	;FORGET REST OF CARD?
	JRST	CDRDIS		;NO. PROCESS IT
	JRST	CDRRET		;YES. DISMISS INTERRUPT
SETFRG:	TLOA	S,FORGET	 ;SET BIT TO FORGET ABOUT CARD
NOTASC:	TRNN	S,4		;COL 1 OF A NOT ASCII CARD
	JRST	SETIOS		;IMAGE MODE - NO PROCESSING
	TLZN	S,COLUM2	;COLUMN1?
	JRST	COL2IN		;NO. COLUMN2 JUST READ
	MOVEI	T1,-5(U)	;COL1 - IS THERE A 7-9 PUNCH?
	TRNE	T1,17
	TRO	S,IOIMPM	;NO. SET ERROR BIT
	LSH	U,-6		;COLUMNS 12-3 ARE WORD COUNT
	JUMPE	U,SETFRG	;FORGET CARD IF WRDCNT=0
	PUSH	P,U		;SAVE U
	IMULI	U,3		;COMPUTE J COUNT
	CAMGE	U,CDRCTR	;MORE THAN THE BUFFER CAN HOLD?
	MOVEM	U,CDRCTR	;NO. SAVE AS REAL COUNT
	POP	P,U		;GET WRDCNT
	AOS	CDRPTR	
	HRRM	U,@CDRPTR	;IN R.H. OF 1ST DATA WORD OF BUFFER
	TLO	S,COLUM1	;SET TO PICK UP COLUMN2
	JRST	STODIS		;STORE S AND RETURN

;HERE WHEN COL 2 OF A BINARY CARD WAS READ
COL2IN:	MOVSM	U,CDRCHK	;COLUMN2 IS CHECKSUM
	HRLM	U,@CDRPTR	;ALSO IN L.H. OF 1ST DATA WORD
	JRST	STODIS		;STORE S AND RETURN
;HERE ON A NON-DATA CDR INTERRUPT
NTDATA:	MOVEI	F,CDRDDB	;NO. SET F
	CONSO	CDR,20		;END OF CARD?
	JRST	NOTEOC		;NO
	TLNE	S,IOEND		;EOF?
	JRST	EOF		;YES. HANDLE IT
	TLZE	S,FORGET	;YES. FORGET ABOUT CARD?
	JRST	NXTCRD		;YES. START READ NEXT CARD
	TRNE	S,10		;BINARY?
	JRST	NXTCRD		;YES.
	MOVEI	U,15		;NO. INSERT <CR>
	PUSHJ	P,DISRET	;STORE IN BUFFER
	MOVEI	U,12		;INSERT <LF>
	PUSHJ	P,DISRET	;STORE IN BUFF
NXTCRD:	CONSZ	CDR,60200	;ERR EXCEPT PICK,STOP OR STACKER?
	JRST	NOTEOC	;YES. PROCESS IT.
	CONSO	CDR,12000	;STOP OR STACKER?
	JRST	CDRGO		;NO ERRORS. START NEXT CARD.
	JRST	CDRREL		;STOP ON STACKER FULL/EMPTY, OR STOP BUTTON

SET026:	TLZA	S,CR029	;026 - RESET 029 BIT
EOFCRD:	TLO	S,IOEND	;EOF - LIGHT BIT
	JRST	SETFRG		;FORGET REST OF CARD
NOTEOC:	CONSZ	CDR,40		;EOF BUTTON PRESSED?
	JRST	EOF		;YES.
	CONSO	CDR,60200	;ERROR EXCEPT PICK OR STOP BUTTON?
	JRST	SETRD1		;NO. GO SET READY-TO-READ INTERRUPT
	TRO	S,IODERR	;YES. SET  ERROR BIT
	JRST	CDRREL		;SHUT DOWN READER
EOF:	TLO	S,IOEND ;EOF - LIGHT BIT
	HRRZ	T1,DEVCLS(F)
	HRRZ	T2,CDRPTR
	MOVE	T4,T2
	ADDI	T2,1
	CAMN	T2,-1(T1)
	MOVE	T2,T1
	HRLM	T2,-2(T1)	;ADVANCE FINAL IN
	MOVEI	U,0		;TO 0 FILL
EOF1:	IBP	CDRPTR
	HRRZ	T3,CDRPTR
	CAME	T3,T4		;IN NEXT WORD?
	JRST	CDRREL		;YES. DONE
	DPB	U,CDRPTR
	JRST	EOF1		;BLANK FILL LAST WORD
CDRREL:	HLLZS	CDRINT		;RESET INTERUPT LOC
CDROFF:	CONO	CDR,10000	;TURN OFF CDR
	TLZE	S,IOW
	PUSHJ	P,SETIOD	;TAKE OUT OF IO WAIT
	JRST	CLRACT		;ZERO IOACT, STORE S AND RETURN

SETRDY:	CONO	CDR,10000	;RESET READ-A-CARD FLOP
	JRST	CDRGO		;ENABLE FOR READY TO READ
SETRD1:	CONSO	CDR,2000	;HOPPER EMPTY/STACKER FULL?
	JRST	SETRDY		;NO. READ NEXT CARD
	CONO	CDR,CDRCHN	;YES. CLEAR TROUBLE ENEABLE, ETC.
	POPJ	P,

CRCVPT:	XWD	350700+T2,CRCVTB
	XWD	260700+T2,CRCVTB
	XWD	170700+T2,CRCVTB
	XWD	100700+T2,CRCVTB

;CODE CONVERSION FOR THE 029 KEYPUNCH

;THE FOLLOWING EQUIVALENCES ARE ARTIFICIALLY DEFINED

;029 KEYTOP	;ASCII 35	;ASCII 37
;CENT		[		[
;0-8-2		]		]
;VERT BAR	^		HAT = L.C. VERT BAR
;UNDERBAR	_		UNDERBAR
;NEGATION	\		TILDE = L.C. NEGATION

	;CHARACTERS	;ZONE/DIGITS
CRCVTB:	ASCII / 123/	;N/N-3
	ASCII .0/ST.	;0/N-3
	ASCII /-JKL/	;11/N-3
	ASCII /HI[./	;12,8/N-3
	ASCII /&ABC/	;12/N-3
	ASCII /QR!$/	;11,8/N-3
	ASCII /YZ],/	;0,8/N-3
	ASCII /89:#/	;8/N-3
	ASCII /4567/	;N/4-7
	ASCII /UVWX/	;0/4-7
	ASCII /MNOP/	;11/4-7
	ASCII /<(+^/	;12,8/4-7
	ASCII /DEFG/	;12/4-7
	ASCII /*);\/	;11,8/4-7
	ASCII /%_>?/	;0,8/4-7
	ASCII /@'="/	;8/4-7

;CODE FOR THE 026 KEYPUNCH A LA H HYMAN

	ASCII / 123/	;N/N-3
	ASCII .0/ST.	;0/N-3
	ASCII /-JKL/	;11/N-3
	ASCII /HI?./	;12,8/N-3
	ASCII /+ABC/	;12/N-3
	ASCII /QR:$/	;11,8/N-3
	ASCII /YZ;,/	;0,8/N-3
	ASCII /89_=/	;8/N-3
	ASCII /4567/	;N/4-7
	ASCII /UVWX/	;0/4-7
	ASCII /MNOP/	;11/4-7
	ASCII /)]<!/	;12,8/4-7
	ASCII /DEFG/	;12/4-7
	ASCII /*[>&/	;11,8/4-7
	ASCII /("#%/	;0,8/4-7
	ASCII /@^'\/	;8/4-7

CDRLIT:	LIT
CDREND:	END
      