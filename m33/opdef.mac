TITLE KI-10 INSTRUCTION AND OPCODE DEFINITIONS

OPDEF	PXCT	[XCT]		;Previous context XCT
DEFINE	ADJSP(A,E),<PRINTX KI cannot do ADJSP>
DEFINE	ADJBP(A,E),<PRINTX KI cannot do ADJBP>
DEFINE	DADD (A,E),<PRINTX KI cannot do DADD>
DEFINE	DSUB (A,E),<PRINTX KI cannot do DSUB>
DEFINE	DMUL (A,E),<PRINTX KI cannot do DMUL>
DEFINE	DDIV (A,E),<PRINTX KI cannot do DDIV>

OPDEF	RDSW	[700040000000]	;DATAI APR, Read console switches
OPDEF	WRMAINT	[700140000000]	;DATAO APR, write maintainence data out
OPDEF	WRAPR	[700200000000]	;CONO  APR, Write APR interrupt assignment
OPDEF	RDAPR	[700240000000]	;CONI  APR, Read APR status bits
OPDEF	WRSW	[700540000000]	;DATAO PI,  Write console switch lights
OPDEF	WRPI	[700600000000]	;CONO  PI,  Write PI status
OPDEF	RDPI	[700640000000]	;CONI  PI,  Read PI status
OPDEF	APRID	[701240000000]	;CONI  PAG, Read CPU serial number
OPDEF	WRADB	[710540000000]	;DATAO PTR, Write Address Break register
DEFINE	RDADB(X),<PRINTX KI cannot read the Address Break register X>

;OPDEF	WREBR	KI uses RH of DATAO PAG, which changes UBR also
;OPDEF	RDEBR	KI uses RH of DATAI PAG, which also reads UBR
;OPDEF	WRUBR	KI uses LH of DATAO PAG, which changes EBR also
;OPDEF	RDUBR	KI uses LH of DATAI PAG, which also reads EBR
PRGEND
TITLE KL-10 INSTRUCTION AND OPCODE DEFINITIONS

OPDEF	ADJSP	[105000000000]	;Adjust stack pointer
OPDEF	DADD	[114000000000]	;Double integer ADD
OPDEF	DSUB	[115000000000]	;Double integer SUB
OPDEF	DMUL	[116000000000]	;Double integer MUL (quad-word result)
OPDEF	DDIV	[117000000000]	;Double integer DIV (quad-word dividend)
OPDEF	ADJBP	[IBP]		;Adjust byte pointer if AC field nonzero
OPDEF	PXCT	[XCT]		;Previous context XCT

  APR==0
OPDEF	APRID	[700000000000]	;BLKI  APR, Read APR ID (CPU serial number)
OPDEF	WRFIL	[700100000000]	;BLKO  APR, Write cache refill algorithm
OPDEF	WRADB	[700140000000]	;DATAO APR, Write Address Break register
OPDEF	RDADB	[700040000000]	;DATAI APR, Read Address Break register
OPDEF	WRAPR	[700200000000]	;CONO  APR, Write APR priority assignment
OPDEF	RDAPR	[700240000000]	;CONI  APR, Read APR status bits
  PI==4
OPDEF	RDERA	[700400000000]	;BLKI  PI,  Read Error Address Register
OPDEF	SBDIAG	[700500000000]	;BLKO  PI,  SBUS diagnostic
OPDEF	WRPI	[700600000000]	;CONO  PI,  Write PI status
OPDEF	RDPI	[700640000000]	;CONI  PI,  Read PI status
  PAG==10
OPDEF	CLRPT	[701100000000]	;BLKO  PAG, clear pager tables
OPDEF	WREBR	[701200000000]	;CONO  PAG, write Exec Base Register
OPDEF	RDEBR	[701240000000]	;CONI  PAG, read Exec Base Register
OPDEF	WRUBR	[701140000000]	;DATAO PAG, write User Base Register
OPDEF	RDUBR	[701040000000]	;DATAI PAG, read User Base Register
  CCA==14
OPDEF	SWPIA	[DATAI CCA,]	;INVALIDATE ALL CACHE DATA, DONT WRITE TO CORE
OPDEF	SWPVA	[BLKO  CCA,]	;SWEEP CACHE, VALIDATING CORE, CACHE VALID
OPDEF	SWPUA	[DATAO CCA,]	;UNLOAD ALL PAGES, UPDATING CORE, CACHE INVALID
OPDEF	SWPIO	[CONI  CCA,]	;INVALIDATE ONE PAGE
OPDEF	SWPVO	[CONSZ CCA,]	;VALIDATE ONE PAGE
OPDEF	SWPUO	[CONSO CCA,]	;UNLOAD ONE PAGE
  TIM==20
OPDEF	RDPERF	[BLKI  TIM,]	;READ DOUBLE-WORD PERFORMANCE METER
OPDEF	RDTIME	[DATAI TIM,]	;READ DOUBLE-WORD TIME BASE
OPDEF	WRPAE	[BLKO  TIM,]	;WRITE PERFORMANCE ANALYSIS ENABLES
  MTR==24
OPDEF	RDMACT	[BLKI  MTR,]	;READ DOUBLE-WORD MBOX ACCOUNTING
OPDEF	RDEACT	[DATAI MTR,]	;READ DOUBLE-WORD EBOX ACCOUNTING
PRGEND
TITLE KS-10 INSTRUCTION DEFINITIONS

OPDEF	ADJSP	[105000000000]	;Adjust stack pointer
OPDEF	DADD	[114000000000]	;Double integer ADD
OPDEF	DSUB	[115000000000]	;Double integer SUB
OPDEF	DMUL	[116000000000]	;Double integer MUL (quad-word result)
OPDEF	DDIV	[117000000000]	;Double integer DIV (quad-word dividend)
OPDEF	ADJBP	[IBP]		;Adjust byte pointer if AC field nonzero
OPDEF	PXCT	[XCT]		;Previous context XCT

OPDEF	APRID	[700000000000]	;BLKI  PAR,Read APR ID (CPU serial number)
OPDEF	WRAPR	[700200000000]	;CONO  APR, set APR priority assignment
OPDEF	RDAPR	[700240000000]	;CONI  APR, read APR status bits
OPDEF	WRPI	[700600000000]	;CONO  PI,  write PI status
OPDEF	RDPI	[700640000000]	;CONI  PI,  read PI status
OPDEF	CLRPT	[701100000000]	;BLKO  PAG, clear pager tables
OPDEF	WREBR	[701200000000]	;CONO  PAG, write Exec Base Register
OPDEF	RDEBR	[701240000000]	;CONI  PAG, read Exec Base Register
OPDEF	WRUBR	[701140000000]	;DATAO PAG, write User Base Register
OPDEF	RDUBR	[701040000000]	;DATAI PAG, read User Base Register
DEFINE	WRADB(X),<PRINTX KS does not have an address break register X>
DEFINE	RDADB(X),<PRINTX KS does not have an address break register X>
OPDEF	WRPUR	[702140000000]	;Write Process Use Register
OPDEF	RDPUR	[702100000000]	;Read Process Use Register
OPDEF	WRSPB	[702400000000]	;Write SPT Base Address
OPDEF	RDSPB	[702000000000]	;Read SPT Base Address
OPDEF	WRCSB	[702440000000]	;Write CST Base Address
OPDEF	RDCSB	[702040000000]	;Read CST Base Address
OPDEF	WRCSTM	[702540000000]	;Write CST Mask
OPDEF	RDCSTM	[702500000000]	;Read CST Mask
OPDEF	WRTIME	[702600000000]	;WRITE 2 WORD TIME BASE.
OPDEF	RDTIME	[702200000000]	;READ 2 WORD TIME BASE.
OPDEF	WRINT	[702640000000]	;WRITE INTERVAL TIMER PERIOD
OPDEF	RDINT	[702240000000]	;READ CURRENT VALUE OF INTERVAL TIMER
OPDEF	WRHSB	[702700000000]	;WRITE HALT STATUS BLOCK BASE ADR
OPDEF	RDHSB	[703000000000]	;READ HALT STATUS BLOCK BASE ADR
OPDEF	UMOVE	[704000000000]	;MOVE FROM USER
OPDEF	UMOVEM	[705000000000]	;MOVE TO USER
OPDEF	TIOE	[710000000000]	;Test I/O word, skip if equal to zero
OPDEF	TION	[711000000000]	;Test I/O word, skip if non zero
OPDEF	RDIO	[712000000000]	;Read I/O word
OPDEF	WRIO	[713000000000]	;Write I/O word
OPDEF	BSIO	[714000000000]	;Bit Set I/O word
OPDEF	BCIO	[715000000000]	;Bit Clear I/O word
OPDEF	TIOEB	[720000000000]	;  same as above, but I/O byte
OPDEF	TIONB	[721000000000]
OPDEF	RDIOB	[722000000000]
OPDEF	WRIOB	[723000000000]
OPDEF	BSIOB	[724000000000]
OPDEF	BCIOB	[725000000000]
PRGEND
TITLE FOONLY INSTRUCTION AND OPCODE DEFINITIONS

OPDEF	ADJSP	[105000000000]	;Adjust stack pointer
OPDEF	DADD	[114000000000]	;Double integer ADD
OPDEF	DSUB	[115000000000]	;Double integer SUB
OPDEF	DMUL	[116000000000]	;Double integer MUL (quad-word result)
OPDEF	DDIV	[117000000000]	;Double integer DIV (quad-word dividend)
OPDEF	ADJBP	[IBP]		;Adjust byte pointer if AC field nonzero
OPDEF	PXCT	[XCT]		;Previous context XCT

  APR==0
OPDEF	APRID	[700000000000]	;BLKI  APR, Read APR ID (CPU serial number)
OPDEF	WRFIL	[700100000000]	;BLKO  APR, Write cache refill algorithm
OPDEF	WRADB	[700140000000]	;DATAO APR, Write Address Break register
OPDEF	RDADB	[700040000000]	;DATAI APR, Read Address Break register
OPDEF	WRAPR	[700200000000]	;CONO  APR, Write APR priority assignment
OPDEF	RDAPR	[700240000000]	;CONI  APR, Read APR status bits
  PI==4
OPDEF	RDERA	[700400000000]	;BLKI  PI,  Read Error Address Register
OPDEF	SBDIAG	[700500000000]	;BLKO  PI,  SBUS diagnostic
OPDEF	WRPI	[700600000000]	;CONO  PI,  Write PI status
OPDEF	RDPI	[700640000000]	;CONI  PI,  Read PI status
  PAG==10
OPDEF	CLRPT	[701100000000]	;BLKO  PAG, clear pager tables
OPDEF	WREBR	[701200000000]	;CONO  PAG, write Exec Base Register
OPDEF	RDEBR	[701240000000]	;CONI  PAG, read Exec Base Register
OPDEF	WRUBR	[701140000000]	;DATAO PAG, write User Base Register
OPDEF	RDUBR	[701040000000]	;DATAI PAG, read User Base Register
  CCA==14
OPDEF	SWPIA	[DATAI CCA,]	;INVALIDATE ALL CACHE DATA, DONT WRITE TO CORE
OPDEF	SWPVA	[BLKO  CCA,]	;SWEEP CACHE, VALIDATING CORE, CACHE VALID
OPDEF	SWPUA	[DATAO CCA,]	;UNLOAD ALL PAGES, UPDATING CORE, CACHE INVALID
OPDEF	SWPIO	[CONI  CCA,]	;INVALIDATE ONE PAGE
OPDEF	SWPVO	[CONSZ CCA,]	;VALIDATE ONE PAGE
OPDEF	SWPUO	[CONSO CCA,]	;UNLOAD ONE PAGE
  TIM==20
OPDEF	RDPERF	[BLKI  TIM,]	;READ DOUBLE-WORD PERFORMANCE METER
OPDEF	RDTIME	[DATAI TIM,]	;READ DOUBLE-WORD TIME BASE
OPDEF	WRPAE	[BLKO  TIM,]	;WRITE PERFORMANCE ANALYSIS ENABLES
  MTR==24
OPDEF	RDMACT	[BLKI  MTR,]	;READ DOUBLE-WORD MBOX ACCOUNTING
OPDEF	RDEACT	[DATAI MTR,]	;READ DOUBLE-WORD EBOX ACCOUNTING

SUBTTL	FOONLY external devices (disk, tape, network)

OPDEF	RCMD	[715000000000]	;READ COMMAND REGISTER
OPDEF	RMA	[716000000000]	;READ MEMORY ADDRESS
OPDEF	RDA	[717000000000]	;READ DISK ADDRESS (IN PAGES)
OPDEF	RECC	[720000000000]	;READ CONTROL REGISTER
OPDEF	LCMD	[721000000000]	;LOAD COMMAND REGISTER
OPDEF	LMA	[722000000000]	;LOAD MEMORY ADDRESS
OPDEF	LDA	[723000000000]	;LOAD DISK ADDRESS
OPDEF	LECC	[724000000000]	;CLEARS ECC LOGIC, STARTS AND INITS CONTROL.
OPDEF	MTRS	[726000000000]	;new Mag Tape Read Status
OPDEF	MTOP	[727000000000]	;new Mag Tape OPeration
OPDEF	MTSZ	[730000000000]	;new Mag Tape CONSZ
OPDEF	MTSO	[731000000000]	;new Mag Tape CONSO
 OPDEF	OMTOP	[726000000000]	;old Mag Tape OPeration
 OPDEF	OMTRS	[727000000000]	;old Mag Tape Read Status
 OPDEF	OMTWR	[731000000000]	;old Mag Tape WRite data
 OPDEF	OMTRD	[732000000000]	;old Mag Tape ReaD data
 OPDEF	TPCONI	[733000000000]	;old TaPe CONI
 OPDEF	TPCONO	[734000000000]	;old TaPe CONO
 OPDEF	TPCNSO	[735000000000]	;old TaPe CONSO
 OPDEF	TPDATI	[736000000000]	;old TaPe DATAI
OPDEF	DCONO	[740000000000]	;CONO TO DISK CONTROL TO SET PI ASSIGNMENT
OPDEF	DCONI	[741000000000]	;CONI FROM DISK CONTROL
OPDEF	DCONSO	[742000000000]	;CONSO DSK,
OPDEF	DCONSZ	[743000000000]	;CONSZ DSK,
OPDEF	TNCONO	[744000000000]	;CONO to TYMNET
OPDEF	TNOUT	[745000000000]	;DATAO to TYMNET
OPDEF	TNIN	[746000000000]	;DATAI from TYMNET

OPDEF	DADD	[114B8]		;DOUBLE ADD
OPDEF	DSUB	[115B8]		;DOUBLE SUB
OPDEF	DMUL	[116B8]		;DOUBLE MUL
OPDEF	DDIV	[117B8]		;DOUBLE DIV
OPDEF	ADJSP	[105B8]		;ADJUST STACK POINTER
OPDEF	PXCT	[XCT]		;PREVIOUS CONTEXT EXECUTE
OPDEF	ADJBP	[IBP]		;ADJUST BYTE POINTER

END
   