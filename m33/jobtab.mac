MINTAB:
	XWD NOMXL+WAYRDS+J,JBTSLM	;(-56)MAXIMUM TRU LIMIT
	XWD NOMXL+WAYRPI+J,JBTINA	;(-55)INACTIVITY TIMEOUT
	XWD NOMXL+WAYRFI+J,JBTFTR	;(-54)PARENT, BROTHER, CHILD
	XWD NOMXL+WAYRFI+J,JBTUID	;(-53)UNIVERSAL ID NUMBER FOR FRAME
	XWD NOMXL+WAYRPI+J,JBTPNO	;(-52)PROGRAM NUMBER FOR FRAME
	XWD NOMXL+WAYACJ,PWSGET		;(-51)DP PGS TO WS*SIZE.
	XWD NOMXL+WAYRAD+J,JBTPWS	;(-50) NO. PAGES TO UWS.
	XWD NOMXL+WAYRAD+J,JBTMPC	;(-47) NO. PAGES MAPPED.
	XWD NOMXL+WAYACJ,MCYGET		;(-46)GET D.P. MICROCYCLES
	XWD NOMXL+WAYACJ,KCTGET		;(-45)GET D.P. KILO-CORE-TICKS
	XWD NOMXL+WAYACJ,TRUGET		;(-44)GET D.P. TRU TO AC,AC+1
	XWD NOMXL+WAYACJ,TRUGN2		;(-43) HIGH PART OF TRU
	XWD NOMXL+WAYTAJ+J,JBTCP2	;(-42) HIGH PART OF MICRO-CYCLES
	XWD NOMXL+WAYRAD+J,JBTBIO	;(-41) BIO CHAR CHARGE
	XWD NOMXL+WAYRAD+J,JBTBET	;(-40) BIO TIME CHARGE
	XWD NOMXL+WAYRAD+J,JBTSOK	;(-37) SOAKEM ARG
	XWD NOMXL+WAYJMP,GETLNK		;(-36) LINKED GETTAB
	XWD NOMXL+WAYRAD,[0]		;(-35) RMT CHR CHARGE
	XWD NOMXL+WAYRAD,[0]		;(-34) RMT TIME CHARGE
	XWD NOMXL+WAYRAD+J,JBTERN	;(-33) ENTERS+RENAMES
	XWD NOMXL+WAYJMP,GETLPS		;(-32) GET TTY LINE POS
	XWD NOMXL+WAYJMP,GETMOD		;(-31) GET TTY MODE
	XWD NOMXL+WAYRDS+J,JBTLIM	;(-30) TIME (TRU) LIMIT
	XWD NOMXL+WAYJLN,JOBLIN		;(-27) JOB TO LINE
	XWD NOMXL+WAYJMP,LINJOB		;(-26) LINE TO JOB
	XWD NOMXL+WAYRPI+J,JBTFPN	;(-25) JBTFPN
	XWD NOMXL+WAYJMP,GETLOG		;(-24) LDBLOG BY U NUMBER
	XWD NOMXL+WAYRFI+J,JBTAUN	;(-23) ACCOUNT USER NUM
	XWD NOMXL+WAYRUN+J,JBTUNM	;(-22) FIRST PART OF USER NAME
	XWD NOMXL+WAYRUN+J,JBTUN1	;(-21) SECOND PART
	XWD NOMXL+WAYRPI+J,JBTLIC	;(-20) LICENSE (NEEDS READ PROCESS DATE TO PROTECT PROCESS LICENSE)
	XWD WAYJMP,CPOPJ		;(-17)
	XWD WAYJMP,CPOPJ		;(-16)
	XWD NOMXL+WAYTAJ+J,JBTCMP	;(-15) CLOCK TIM
	XWD NOMXL+WAYTAJ+J,JBTCPU	;(-14) HIGH PART OF KCT
	XWD NOMXL+WAYRAD+J,JBTBCS	;(-13) BREAK CHRS*SIZE
	XWD NOMXL+WAYRAD+J,JBTCNK	;(-12) CONNECT TIME
	XWD NOMXL+WAYRAD+J,JBTELP	;(-11) ELAPSED TIME*SIZE
	XWD NOMXL+WAYRAD+J,JBTCOT	;(-10) CHRS OUT
	XWD NOMXL+WAYRAD+J,JBTCIN	;(-7) CHRS IN
	XWD NOMXL+WAYRAD+J,JBTSOT	;(-6) DISK BLOCKS OUT*SIZE
	XWD NOMXL+WAYRAD+J,JBTSIN	;(-5) DISK BLOCKS IN*SIZE
	XWD NOMXL+WAYRAD+J,JBTSER	;(-4) ENTER+RENAME*SIZE
	XWD NOMXL+WAYRAD+J,JBTSLK	;(-3) LOOKUPS*SIZE
	XWD NOMXL+WAYRAD+J,JBTDLK	;(-2) LOOKUPS
	XWD WAYJMP,CPOPJ		;(-1)
NUMTAB:	XWD NOMXL+WAYRUN+J,JBTSTS	;(0) - JOB STATUS BITS
	XWD JOBMXL+WAYRPI,[0]		;(1) - Obsolete JOB SIZE-1,,UPT PAGE
	XWD NOMXL+WAYRFI+J,JBTPPN	;(2) - PROJECT,PROGRAMMER NUMBER
	XWD NOMXL+WAYRPI+J,JBTNAM	;(3) - PROGRAM BEING RUN
	XWD NOMXL+WAYACJ,TRUGN		;(4) - TRU'S
	XWD NOMXL+WAYTAJ+J,JBTKCT	;(5) - KILO-CORE TICKS(JIFFIES*SIZE IN J)
	XWD NOMXL+WAYRPI+J,JBTPRV	;(6) - PRIVILEGE BITS SET BY LOGIN
	XWD NOMXL+WAYJMP,SIMJSW		;(7) - FAKE JBTSWP, TEMPORARY TILL SYSTAT FIXED.
	XWD NOMXL+WAYRDS+J,TTYTAB	;(10) - TTY TRANSLATOR TABLE (DDB ADDRESS)
	XWD CNFMXL+J,CNFTBL		;(11) - CONFIGURATION DATA
	XWD NSWMXL+WAYSYS+J,NSWTBL	;(12) - NON-SWAPPING DATA
	XWD SWPMXL+WAYSYS+J,SWPTBL	;(13) - SWAPPER DATA
	XWD WAYJMP,CPOPJ	;JBTSGN	;(14) - OBSOLETE (OLD HISEG NUMBER)
	XWD ODPMXL+WAYSYS+J,ODPTBL	;(15) - ONCE ONLY DISK PARAMETERS
	XWD LVDMXL+J,LVDTBL		;(16) - LEVEL D DISK PARAMS
	XWD NOMXL+WAYRAD+J,JBTRCT	;(17) - DISK BLOCKS READ BY JOB
	XWD NOMXL+WAYRAD+J,JBTWCT	;(20) - DISK BLOCKS WRITTEN BY JOB
	XWD WAYJMP,CPOPJ	;NONE	;(21) - ACC. DSK-BLOCK-SECONDS ALLOCATED BY JOB
	XWD WAYJMP,CPOPJ	;NONE	;(22) - TIME OF DAY DSK BLOCKS LAST ALLOCATED+TOTAL BLOCKS ALLOCATED
.GTSLF==.-NUMTAB			;.GTSLF=23 - Get self pointer
	XWD NOMXL+WAYJMP,DONUMT		;(23) - THE GETTAB ADDRESSES THEMSELVES (GETTAB IMMEDIATE)
	XWD WAYJMP,CPOPJ	;JBTDEV	;(24) - OBSOLETE (SHR-SEG DEVICE NAME)
	XWD STSMXL+J,STSTBL		;(25) - SIXBIT NAMES FOR JOB QUEUE CODES
	XWD WAYJMP,CPOPJ	;JBTLOC	;(26) - RESERVED FOR REMOTE COMMUNICATIONS
	XWD WAYJMP,CPOPJ	;NONE	;(27) - PHYSICAL CORE ALLOCATION TABLE
	XWD COMMXL+WAYSYS+J,COMTAB	;(30) - SIXBIT Monitor Command Names
	XWD NOMXL+WAYRUN+J,JBTNM1##	;(31) - SIXBIT Username [1 for 6]
	XWD NOMXL+WAYRUN+J,JBTNM2##	;(32) - SIXBIT Username [7 for 6]
	XWD NOMXL+WAYRAD+J,JBTAUN	;(33) - DEC: Job charge number [AUN]
	XWD WAYJMP,CPOPJ	;NONE	;(34) - (Obsolete) Pointer to TMPCOR
	XWD NOMXL+WAYRFI+J,JBTWCH	;(35) - FRAME WATCH BITS
	XWD WAYJMP,CPOPJ	;JBTSPL	;(36) - DEC: Spooling control flags
	XWD WAYJMP,CPOPJ	;JBTRTD	;(37) - DEC: Real time status word
	XWD WAYJMP,CPOPJ	;JBTLIM	;(40) - DEC: JBTLIM and batch status
	XWD WAYJMP,CPOPJ	;NONE	;(41) - DEC: .GTQQQ Obsolete
	XWD WAYJMP,CPOPJ	;NONE	;(42) - DEC: .GTQJB Obsolete
	XWD SETMXL+WAYSYS+J,SETBL	;(43) - SIXBIT SET Command Names
	XWD CRSMXL+WAYSYS+J,.GTCRS##	;(44) - 3-word Crash data block
	XWD WAYJMP,CPOPJ	;ISCAN	;(45) - DEC:.GTISC spwinp scan list
	XWD WAYJMP,CPOPJ	;OSCAN	;(46) - DEC:.GTOSC swpout scan list
	XWD WAYJMP,CPOPJ	;SSCAN	;(47) - DEC:.GTSSC sched scan list
	XWD WAYJMP,CPOPJ	;JBTRSP	;(50) - DEC:.GTRSP Response counter
	XWD SYSMXL##+WAYSYS+J,SYSTBL##	;(51) - System-wide ERROR data
	XWD WHYMXL##+WAYSYS+J,CRSHAC##	;(52) - ASCIZ Reload string (CRSHAC)
	XWD WAYJMP,CPOPJ	;JBTRQT	;(53) - DEC: Total time in run queue
	XWD WAYJMP,CPOPJ	;JBTSPS	;(54) - DEC: Status word for CPUn(s)
	XWD WAYJMP,CPOPJ	;.C0CDB	;(55) - DEC:.GTC0C
	XWD WAYJMP,CPOPJ	;.C0VBG	;(56) - DEC:.GTC0V
	XWD WAYJMP,CPOPJ	;.C1CDB	;(57) - DEC:.GTC1C
	XWD WAYJMP,CPOPJ	;.C1VBG	;(60) - DEC:.GTC1V
	XWD WAYJMP,CPOPJ	;.C2CDB	;(61) - DEC:.GTC2C
	XWD WAYJMP,CPOPJ	;.C2VBG	;(62) - DEC:.GTC2V
	XWD WAYJMP,CPOPJ	;.C3CDB	;(63) - DEC:.GTC3C
	XWD WAYJMP,CPOPJ	;.C3VBG	;(64) - DEC:.GTC3V
	XWD WAYJMP,CPOPJ	;.C4CDB	;(65) - DEC:.GTC4C
	XWD WAYJMP,CPOPJ	;.C4VBG	;(66) - DEC:.GTC4V
	XWD WAYJMP,CPOPJ	;.C5CDB	;(67) - DEC:.GTC5C
	XWD WAYJMP,CPOPJ	;.C5VBG	;(70) - DEC:.GTC5V
	XWD FETMXL+WAYSYS+J,FETTBL	;(71) - Feature test table
	XWD WAYJMP,CPOPJ	;SDVTBL	;(72) - DEC: Ersatz device table
	XWD WAYJMP,CPOPJ	;.GTSCN	;(73) - DEC: Scanner data
	XWD WAYJMP,CPOPJ	;SNDTMP	;(74) - DEC: ASCIZ Last SEND ALL
	XWD TTYMXL+WAYSYS+J,TTYTBL	;(75) - SIXBIT Set TTY commands
	XWD WAYJMP,CPOPJ	;PIDTAB	;(76) - DEC: Process communications ID
	XWD WAYJMP,CPOPJ	;IPCTAB	;(77) - DEC: Misc IPCF data
	XWD NOMXL+WAYRPI+J,JBTUPM	;(100)- User pages,Physical UPT page#
	XWD WATMXL+WAYSYS+J,WATTAB	;(101)- SIXBIT Set WATCH commands
	XWD WAYJMP,CPOPJ	;PDB	;(102)- DEC: Current Virt/Phys Limits
	XWD WAYJMP,CPOPJ	;PDB	;(103)- DEC: Maximum Virt/Phys Limits
	XWD WAYJMP,CPOPJ	;PDB	;(104)- DEC: .GTIPA IPCF statistics
	XWD WAYJMP,CPOPJ	;PDB	;(105)- DEC: .GTIPP IPCF pointers etc.
	XWD WAYJMP,CPOPJ	;PDB	;(106)- DEC: PID for Jobs [SYSTEM]INFO
	XWD WAYJMP,CPOPJ	;PDB	;(107)- DEC: .GTIPQ IPCF flags/quotas
	XWD WAYJMP,CPOPJ	;PDB	;(110)- DEC: Job logical name table
	XWD WAYJMP,CPOPJ	;PDB	;(111)- DEC: ADRBRK word for job
	XWD WAYJMP,CPOPJ	;NONE	;(112)- DEC: .GTCMP Obsolete
	XWD WAYJMP,CPOPJ	;.GTVM	;(113)- DEC: General VM Info by Item
	XWD WAYJMP,CPOPJ	;JBTVRT	;(114)- DEC: Paging rate for job
	XWD WAYJMP,CPOPJ	;.GTSST	;(115)- DEC: Scheduler statistics
	XWD WAYJMP,CPOPJ	;.GTDCF	;(116)- DEC: Desired use fract/chan
	XWD WAYJMP,CPOPJ	;JBTST2	;(117)- DEC: Second job status word
	XWD WAYJMP,CPOPJ	;JBTSCD	;(120)- DEC: Job type/Scheduler Class
	XWD WAYJMP,CPOPJ	;CLSSTS	;(121)- DEC: Scheduler Class quotas
	XWD WAYJMP,CPOPJ	;NONE	;(122)- DEC: .GTCOJ Obsolete
	XWD WAYJMP,CPOPJ	;SIDOFS	;(123)- DEC: Class runtime since quota set
	XWD WAYJMP,CPOPJ	;NONE	;(124)- DEC: .GTSQH Obsolete
	XWD WAYJMP,CPOPJ	;NONE	;(125)- DEC: .GTSQ  Obsolete
	XWD WAYJMP,CPOPJ	;.GTSID	;(126)- DEC: .GTSID Special PID table
	XWD WAYJMP,CPOPJ	;.EQTAB	;(127)- DEC: .GTENQ ENQ/DEQ statistics
	XWD WAYJMP,CPOPJ	;JBTJLT	;(130)- DEC: .GTJLT UDT at LOGIN
	XWD WAYJMP,CPOPJ	;PDB	;(131)- DEC: .GTEBT EBOX time/jiffies
	XWD WAYJMP,CPOPJ	;PDB	;(132)- DEC: .GTEBR EBOX jiffy remainder
	XWD WAYJMP,CPOPJ	;PDB	;(133)- DEC: .GTMBT MBOX time/jiffies
	XWD WAYJMP,CPOPJ	;PDB	;(134)- DEC: .GTMBR MBOX jiffy remainder
	XWD NOMXL+WAYRPI,['DSKB  ']	;(135)- .GTRDV program run device
	XWD NOMXL+WAYRPI+J,JBTFPN;PDB	;(136)- .GTRDI program run directory
	XWD NOMXL+WAYRPI+J,JBTPRG##	;(137)- .GTRFN program run filename
	XWD WAYJMP,CPOPJ;  JBTXXX;PDB	;(140)- .GTDFL User defaults for job
	XWD WAYJMP,CPOPJ	;NETGTT	;(141)- DEC: .GTNTP Network perf data
	XWD WAYJMP,CPOPJ	;SCDPER	;(142)- DEC: .GTSPA Scheduler perf data
	XWD WAYJMP,CPOPJ	;PDB	;(143)- DEC: .GTVKS Virtual KCT
	XWD WAYJMP,CPOPJ;  JBTXXX;PDB	;(144)- .GTUUC Monitor Calls XCT'd
	XWD WAYJMP,CPOPJ	;PDB	;(145)- DEC: .GTRS0
	XWD WAYJMP,CPOPJ	;PDB	;(146)- DEC: .GTRS1
	XWD WAYJMP,CPOPJ	;PDB	;(147)- DEC: .GTRS2
	XWD WAYJMP,CPOPJ	;PDB	;(150)- DEC: .GTRS3
	XWD WAYJMP,CPOPJ	;PDB	;(151)- DEC: .GTRS4
	XWD NOMXL+WAYRFI+J,JBTPC	;(152)- DEC: .GTPC i/o wait DDB/PC
;	XWD NOMXL+WAYRFI+J,JBTPRV;PDB	;(153)- DEC: .GTCAP job capabilities
;	XWD WAYJMP,CPOPJ	;RNGTAB	;(154)- DEC: .GTIDX min,max table range
;	XWD WAYJMP,CPOPJ	;NUMTAB	;(155)- DEC: .GTGTB gettab immediate
;	XWD XXXMXL+J,XXXTBL	;TTTWDT	;(156)- DEC: .GTTNM terminal type names
;	XWD WAYJMP,CPOPJ	;PDB	;(157)- DEC: .GTOBI WTO & Batch data
;	XWD WAYJMP,CPOPJ	;DVCSTS	;(160)- DEC: .GTDCD coni/datai for DSB
;	XWD WAYJMP,CPOPJ	;NDBTBL	;(161)- DEC: .GTNDB byt ptrs to NDB
;	XWD WAYJMP,CPOPJ	;JBTPDB	;(162)- DEC: .GTPDB PP pages, PDB addr
;	XWD WAYJMP,CPOPJ	;PDB	;(163)- DEC: .GTEQJ ENQ/DEQ queue header
;	XWD XXXMXL+WAYSYS+J,XXXTBL	;(164)- DEC: Set DEFAULT cmd args
;	XWD NOMXL+WAYRPI+J,JBTXXX;PDB	;(165)- DEC: .GTLBS disk buffer sizes
;	XWD WAYJMP,CPOPJ	;PDB	;(166)- DEC: .GTPTR program to run
;	XWD WAYJMP,CPOPJ	;PDB	;(167)- DEC: .GTSTM UDT of last RESET
;LMAP AND UPT GENERATION

  UP%000=:%UPT+000	;User page map
  UP%200=:%UPT+200	;User HISEG map
  UP%400=:%UPT+400	;Funnyspace map
  UP%500=:%UPT+500	;Page fail words (KI uses 426)
  UP%600=:%UPT+600	;Stack and such  (KI uses 440)
			;PGT,MUU,MUP,KNT defined in K?SYM
  UP%PGT=:%UPT+UPTPGT	;Trap instructions (420-423)
  UP%MUU=:%UPT+UPTMUU	;UUO or illegal instruction stored here (424)
  UP%MUP=:%UPT+UPTMUP	;PC of UUO or illegal instruction (425)
  UP%KNT=:%UPT+UPTKNT	;Start of dispatch table (430-437)


%UPT.V==UPTFSL		;START OF UPT LOCATIONS RELATIVE TO %UPT (440 or 600)

;THE FOLLOWING LOCATIONS MUST BE IN THE FIRST ^D512 WORDS

	XP XACSTL,4	;eXec AC STack Length (UUOs nested 4 deep)
UARRAY(UPTAC0,<<20*XACSTL>+1>)	;Extra word for stack pointer overflow
	IFN UPTAC0&17,<PRINTX UPTAC0 MUST BE ON 20 WORD BOUNDARY>
  UP%AC0=:%UPT+UPTAC0
UVAR(UPTSTS)	;JOB IN CORE STATUS BITS
			;18-35	STARTING ADDRESS IF STRTAD SET
	XP XPNCOR,1	;17	CORE NEEDS TO BE EXPANDED
	XP STRTAD,2	;16	RIGHT HALF CONTAINS A STARTING ADDRESS
	XP UPSCLK,4	;15	CLOCK SHOULD BE ON
	XP SAVCHG,10	;14	CHARGES ARE SAVED IN UPT
	XP REC.WR,20	;13	WRITE STREAM ACCTG RECORD NEXT EXIT
	XP LSAREC,40	;12	LOCAL STREAM ACCTG DONE
	XP SG.SWR,100	;11	CURRENT HISEG LOADED FROM .SWR FILE
	XP UPNPSR,^D10	;8-10	(POS) PENDING STREAM REC TYPE
	XP UPSPSR,^D3	;	(SIZ) SEE START CMD AND USRXIT
	XP UPSSWE,2000	;7	JOB GOT SWAP ERROR FOR USER PAGE
			;	WHILE IT OWNED DISK RESOURCE, AND
			;	JBTABT NOT SET UP. UTRP SET WITH
			;	THIS BIT SO USRXIT SEES IT.
	XP UPSABK,4000	;6	ADDRESS BREAK DURING UUO.
	XP STRTCL,10000	;5	INCREMENT START ADDRESS BEFORE USING IT.
			;0-4	(UNUSED)

 UPYPSR::POINT UPSPSR,%UPT+UPTSTS,UPNPSR ;POINTER TO PENDING STREAM REC TYPE
 USYPSR::POINT UPSPSR,%UPS+UPTSTS,UPNPSR ; One for %UPS
 UXYPSR::POINT UPSPSR,%UPX+UPTSTS,UPNPSR ; One for %UPX

UVAR(UPTJOB)		;HAS JOB NUMBER OWNING THIS UPT
UVAR(UPTPC)		;HAS THE JOB'S PC WHEN NEXT SET TO RUN
  UP%PC=:%UPT+UPTPC
UVAR(UPTACP)		;STACK POINTER TO SAVED EXEC AC'S
UVAR(UPTLDC)		;COUNT OF NUMBER OF LMAP SLOTS KEPT IN ACS FROM THIS UPT
UVAR(UPTABK)		;ADDRESS BREAK WORD.
  XP EPLLEN,176	;LENGTH EXEC PDL
UVAR(UPTUUO)		;Top level MUUO (called from user mode)
  UP%UUO=:%UPT+UPTUUO
UARRAY(UPTPDL,EPLLEN)	;SYSTEM UUO PDL FOR CURRENT JOB
  UP%PDL=:%UPT+UPTPDL		;Stack in funny space
	XP NUMCHN,^D48		;MAX NUMBER OF IO CHANNELS
	XP MAXCHN,<NUMCHN-1>
UARRAY(UPTJDA,NUMCHN)	;RH==DDB ADDRESSES (JOB DEV ASSIGNMENTS)
  UP%JDA=:%UPT+UPTJDA	;LH= VARIOUS STATUS BITS FOR CHANNEL:
			;(INITB,LOOKB,ICLOSB..ETC SEE S.MAC)
UARRAY(UPTSIM,NUMCHN)	;SIMULATED BUFF/DUMP MODE
			;IO DATABASE. LH=SEQUENCE STAMP. RH=
			;SIMIO STATUS BITS+PAGE NUMBER FIELD
UARRAY(UPTPOS,NUMCHN)	;BLOCK POSITION IN (DSK) FILE ON THIS CHANNEL
UVAR(UPTPBM)		;PAGE BIT MAP. BITS 0-31 SET IF PER-PROCESS
			;PGS 340-377 USED FOR SIMIO
UVAR(UPTIOC)	;SIMIO IO COUNT, FOR SEQ. STAMP
UARRAY(UPTXAC,20)	;EXEC ACS HERE WHEN JOB ISN'T RUNNING.
UARRAY(UPTUAC,20)	;USER ACS WHEN JOB ISN'T RUNNING (FORMERLY IN PAGE 0)
  UP%UAC=:%UPT+UPTUAC
	XP CHGSIZ,<^D22>
UARRAY (UPTCHG,CHGSIZ)	;SAVED TRU COMPONENTS. 17 PRE-P031

UVAR(UPTHCU)		;HIGHEST USER I/O CHANNEL IN USE.
UVAR(UPTENB)		;LH=UNUSED,RH=APR CONSO FLAGS FOR USER
			; APR TRAPPING.  SET BY APRENB UUO.
UVAR(UPTTPN)		;HAS TRAP NUMBERS FOR VARIOUS TRAPS
UVAR(UPTTP1)		;MORE TRAP NUMBERS
UVAR(UPTMTM)		;Micro-cycle interrupt timer
UVAR(UPTABL)		;SAVED LOCATION FOR ADDRESS BREAK (SO CAN REPORT WHERE UUO WAS)
UVAR(UPTUFI)		;USER WORKING SET PAGE FAULT INFORMATION
UVAR(UPTXFI)		;LIKE UFI, BUT FOR TIMES TRAP CAN'T HAPPEN
UVAR(UPTUEI)		;USER ERROR INFORMATION (FOR PAGES)
UVAR(UPTXEI)		;LIKE UEI, BUT USED WHEN TRAP CAN'T HAPPEN
UVAR(UPTURI)		;USER REF BIT TRAP INFO
UVAR(UPTXRI)		;LIKE URI, BUT USED WHEN TRAP CAN'T HAPPEN.
UVAR(UPTUII)		;ILL MEM REF, WRITE VIOL, ADDR BREAK INFO WORDS
UVAR(UPTXII)		; RETURNED BY PGISTS UUO.

  XP UPTTCB,UPTTPN	;FIRST LOC TO CLEAR IN APRENB
  XP UPTTCE,UPTXII	;LAST LOC.
UVAR(UPTREL)		;LH/0; RH/LOWSEG HI ADDR OR 0 IF NO LOWSEG
UVAR(UPTHRL)		;LH/0;  RH/HISEG HI ADDR, OR 0 IF NO HISEG
UVAR(UPTRNM)		;RESTRICTED COMMAND FILE NAME
UVAR(UPTRPN)		;RESTRICTED COMMAND FILE PPN
UVAR(UPTALD)		;ALTERNATE LOGOUT PROGRAM DEVICE
UVAR(UPTALP)		;ALTERNATE LOGOUT PROGRAM PPN
UVAR(UPTALN)		;ALTERNATE LOGOUT PROGRAM NAME
UVAR(UPTPJC)		;SESSION PROJECT CODE WORD 0
UVAR(UPTPJ1)		;WORD 1
UVAR(UPTPJ2)		;WORD 2,BIT 35 IS "LICENSE REQD" BIT
UVAR(UPTSAT)		;HAS STATUS BITS FOR + ADDR OF %SAT PCB.
UVAR(UPTRIB)		;HAS STATUS BITS FOR + ADDR OF %RIB PCB.
UVAR(UPTRB2)		;HAS STATUS BITS FOR + ADDR OF %RB2 PCB.
UVAR(UPTPID)		;PID FOR CURRENT PROGRAM - FROM RUN FILE'S PID.
UVAR(UPTSPD)		;SAVED PID, SO PIDSET UUO CAN SET IT TO 0 AND BACK

UVAR(UPTLOG)		;Originating Port for this frame.
  UP%LOG=:%UPT+UPTLOG
UVAR(UPTLKJ)		;JOB NUMBER OF JOB WHO OWNS CONTEXT PAGE WRITE LOCK FOR THESE CONTEXT PAGES
UVAR(UPTLKW)		;HEAD OF WAITERS FOR CTX PAGE WRITE INTERLOCK
UVAR(UPTOFD)		;FRAME DESCRIPTOR SET BY SETOTF UUO.
UVAR(UPTLKC)		;NUMBER OF TIMES OWNER OF LOCK CALLED FOR IT AGIN+1
			; (NESTED PAGE FAULTS INSIDE UUOS, ETC.)
UVAR(UPTETP)		;(0) CLASS,,TYPE WITHIN CLASS OF ERROR TRAP
XP UPTHST,UPTETP	;FIRST LOCATION OF HALT STATUS BLOCK
UVAR(UPTECN)		;(1) COUNT TO TELL HOW MANY ERRORS HAPPENED.
UVAR(UPTEPC)		;(2) PC OF ERROR TRAP
UVAR(UPTEUP)		;(3) PC OF LAST TOP LEVEL UUO PERFORMED
UVAR(UPTEDV)		;(4) DEVICE NAME, LOCATION, ETC.
UVAR(UPTELC)		;(5) LOCATION, OTHER DATA
UVAR(UPTEL1)		;(6) ANOTHER LOCATION FOR ERROR DATA.
XP FHSMXC,<UPTEL1-UPTHST+1> ;MAXIMUM COUNT

XP FHIMAX,FHIN-1	;MAXIMUM VALUE FOR INDEXING INTO UPTFHT

UARRAY(UPTFHT,FHIN)	;FRAME HANDLE ADDRESSES.

UARRAY(UPTS2P,.ARSIZ)	;BITS FOR ACCESS RIGHTS OF SELF OVER PARENT
UARRAY(UPTP2S,.ARSIZ)	;BITS FOR ACCESS RIGHTS OF PARENT OVER SELF
UARRAY(UPTMFR,.ARSIZ)	;MAX INWARD RIGHTS FOR THINGS THAT NEED CONTEXT PAGES IN.

UVAR(UPTSTV)		;CONTAINS SIZE,,START ADDRESS OF START VECTOR
;DEFINE LMAP LOCATIONS
UARRAY(UPTLMA,<VPMAX+1>);BASIC LMAP SLOT DATA, INDEXED BY VP
UARRAY(UPTMWB,<<VPMAX+1+^D35>/^D36>)
			;MONITOR WORKING SET BIT TABLE.
AGECPW==:<^D36/AGESIZ>
AGEMAX==:<<1_AGESIZ>-1>
UARRAY(UPTAGE,<<^D512+AGECPW-1>/AGECPW>)
			;PAGE AGE TABLE
UARRAY(UPTUWB,<<^D512+^D35>/^D36>)
			;USER WORKING SET BIT TABLE
UVAR(UPTUWS)		;USER WORKING SET DATA
			;CURRENT SIZE IS IN JBYUWS.
 UPYUWL::POINT 10,%UPT+UPTUWS,25	;CURRENT LIMIT
 USYUWL::POINT 10,%UPS+UPTUWS,25 ;ONE FOR %UPS
 UXYUWL::POINT 10,%UPX+UPTUWS,25 ;ONE FOR %UPX
 UPYUWM::POINT 10,%UPT+UPTUWS,35	;CEILING FOR CURRENT LIMIT
 USYUWM::POINT 10,%UPS+UPTUWS,35 ;ONE FOR %UPS
 UXYUWM::POINT 10,%UPX+UPTUWS,35 ;ONE FOR %UPX

UVAR(UPTNTV)		;TICKS UNTIL NEXT PAGE AGE RECOMPUTATION
UVAR(UPTMAT)		;# OF MATURE PAGES (AGE .GE. C(AGEMAT))
UVAR(UPTELD)		;# OF ELDERLY PAGES (AGE .GT. C(AGEELD))
UVAR(UPTRPT)		;POINTER FOR CIRCULAR PAGE REPLACEMENT ALGORITHM

UVAR(UPTRES)		;WORD FOR SWAPPER TO REMEMBER RESERVED PAGES
 USYSIN::POINT 10,%UPS+UPTRES,15	;NUMBER OF PAGES SWAPPED IN
			; FOR SETTING UP ICPT
 USYRES::POINT 10,%UPS+UPTRES,25	;NUMBER OF RESERVES PAGES JOB OWNS STILL
 USYLSP::POINT 10,%UPS+UPTRES,35	;LMAP SCAN POINTER (WHERE
			; SWAPPER STARTS SWAPPING IN ON A CYCLE

XP UPTEND,%UPT.V-1	;Ending location to clear, end of BLT when crashing
NCTXPG==:<%UPT.V!777+1>/1000
ONSZCK(CONTEXT,NCTXPG,CTX)	;Check if enough space allocated for CTX pages
  PDL=:   UPT+%UPT.V		;Stack for null job and scheduler
  NULUPL==NCTXPG*1000-%UPT.V	;Null job UPT limit = until end of page
  IFL <NULUPL-60>,<PRINTX ? Null job PDL is too small>
NULPDL::IOWD NULUPL,PDL		;Null job gets a short stack (70 words)

VPUMAX==:VPMAX-NCTXPG	;MAXIMUM NON-CONTEXT PAGE VP

XP %UPT.N,VPUMAX+1-CNVVPN 	;START PAGE OF CONTEXT PAGES
XP %UPT,<%UPT.N_9>	;START ADDRESS OF CONTEXT PAGES IN UPT
XP %UPLMA,%UPT+UPTLMA	;THIS ADDR+VP GIVES LMAP SLOT DATA
XP %UPLMX,%UPX+UPTLMA	;DITTO FOR %UPX.

XP %COW.N,%UPT.N-1	;USED FOR COPY ON WRITE
XP %COW,<%COW.N_^D9>

;%UPX IS A SPECIAL SET OF PAGES THAT EITHER CONTAINS POINTERS IDENTICAL
; TO %UPT POINTERS IF THE SLOTS DON'T EXIST, OR LMAP SLOTS FOR
; ANOTHER FRAMES'S CONTEXT PAGES.

XP %UPX.N,%COW.N-NCTXPG	;PLACE FOR VIRTUAL UUOS THAT WORK ON OTHER FRAMES TO
			; ACCESS CURRENT CONTEXT PAGES
XP %UPX,<%UPX.N_^D9>

;ADD OTHER PERMANENTLY ALLOCATED EXEC PER PROCESS VALUES ABOVE HERE
XP %LEP.N,%UPX.N-1	;LAST DYNAICALLY ALLOCATED EXEC PER PROCESS PAGE

PBMMSK::-1_<340-%LEP.N+1>	;MASK FOR DYNAMIC ALLOCATER.
				; 1 MEANS IN USE.

XP %UPS.N,EVPMAX-NCTXPG+1	;FIRST EPT PAGE NUMBER THAT CONTEXT PGES MAPPED IN
XP %UPS,<%UPS.N_9>	;FIRST CONTEXT PAGE ADDRESS IN EPT
XP %UPLMS,%UPS+UPTLMA	;TDDR PLUS VP GIVES 36 BIT LMAP SLOT DATA

UPYPTN:: UPMPTR(%UPT.N)		;
UPYPTM:: UPMPTR(%UPT.N-1)	; (CORE1)
UPYPXN:: UPMPTR(%UPX.N)		;
UPYPXM:: UPMPTR(%UPX.N-1)	; (CORE1)

USYPTN:: UPSPTR(%UPT.N)		; (ONCE)(CORE1)
USYPXN:: UPSPTR(%UPX.N)		;
USYPTM:: UPSPTR(%UPT.N-1)	;
USYPXM:: UPSPTR(%UPX.N-1)	; (SCHED1)

UXYPTN:: UPXPTR(%UPT.N,%UPT)	;
UXYPTM:: UPXPTR(%UPT.N-1,%UPT)	; (COMCON)

EPYPSN:: EPTPTR(%UPS.N)		; (ONCE)(PICON)(UUOCON)
EPYPSM:: EPTPTR(%UPS.N-1)	; (CORE1)(SCHED1)
;MONITOR TABLES WITH ONE ENTRY PER JOB

JBTSLM::BLOCK	JOBN		;(-56) Console settable TRU limit     - Frame global
JBTINA::BLOCK	JOBN		;(-55) INACTIVITY TIMEOUT LIMIT,,# MIN LAST RAN
JBTFTR::BLOCK	JOBN		;(-54) FRAME TREE (12) Parent, Sibling, Child
JBTUID::BLOCK	JOBN		;(-53) UNIVERSAL FRAME ID
JBTPNO::BLOCK	JOBN		;(-52) "PROGRAM NUMBER" - RIGHTS GO AWAY AFTER MISMATCH AGAINST THIS
JBTSPN::BLOCK	JOBN		;(***) SELF TO PARENT RIGHTS PROGRAM NUMBER
JBTP2S::BLOCK	JOBN		;(***) FAST ACCESS RIGHTS BITS FOR PARENT TO SELF
JBTS2P::BLOCK	JOBN		;(***) FAST ACCESS RIGHTS BITS FOR SELF TO PRENT
JBTMFR::BLOCK	JOBN		;(***) FAST MAXIMUM INWARD RIGHTS (Strangers)
JBTCP2::BLOCK	JOBN		;(-42) HIGH ORDER PART OF MICRO CYCLES
JBTBIO::BLOCK	JOBN		;(-41) BIO CHARS IN/OUT
JBTBET::BLOCK	JOBN		;(-40) ELAPSED TIME IN BLOCK I/O MODE (IN SECONDS)
JBTSOK::BLOCK	JOBN		;(-37) FROM SOAKEM UUO
JBTERN::BLOCK	JOBN		;(-33) ENTERS AND RENAMES
JBTLIM::BLOCK	JOBN		;(-30) Console/UUO settable TRU limit - Process local
JBTFPN::BLOCK	JOBN		;(-25) FILE PPN OF PROGRAM LAST RUN
JBTAUN::BLOCK	JOBN		;(-23) Logged-in PPN (Accounting user number)
JBTUNM::BLOCK	JOBN		;(-22) Logged-in Username (1st half) sixbit chars
JBTUN1::BLOCK	JOBN		;(-21) Logged-in Username (2nd half) sixbit chars
JBTSLC::BLOCK	JOBN		;(***) Saved license    (process,,frame)
JBTLIC::BLOCK	JOBN		;(-20) FOR LICENSE BITS (process,,frame)
JBTCMP::BLOCK	JOBN		;(-15) MICRO CYCLES FROM DK10
JBTCPU::BLOCK	JOBN		;(-14) HIGH ORDER BITS OF MICRO CYC*SIZE
JBTBCS::BLOCK	JOBN		;(-13) BREAK CHRS * SIZE
JBTCNK::BLOCK	JOBN		;(-12) CONNECT TIME (DETACHED NOT COUNTED)
JBTELP::BLOCK	JOBN		;(-11) ELAPSED TIME*SIZE
JBTCOT::BLOCK	JOBN		;(-10) CHRS OUT
JBTCIN::BLOCK	JOBN		;( -7) CHRS IN
JBTSOT::BLOCK	JOBN		;( -6) DISK BLOCKS WRITTEN*SIZE
JBTSIN::BLOCK	JOBN		;( -5) DISK BLOCKS READ*SIZE
JBTSER::BLOCK	JOBN		;( -4) ENTERS AND RENAMES*SIZE
JBTSLK::BLOCK	JOBN		;( -3) LOOKUPS*SIZE
JBTDLK::BLOCK	JOBN		;( -2) LOOKUPS
JBTSTS::BLOCK 	JOBN		;(  0) JOB STATUS WORD
JBTPPN::BLOCK	JOBN		;(  2) GFD'd Project Programmer Number
RTIME::	BLOCK	JOBN		;(***) TOTAL RUN TIME SINCE LAST IJOB OR RUNTIME
JBTNAM::BLOCK	JOBN		;(  3) NAME OF FILE USED IN LAST R,RUN,GET, ETC
JBTKCT::BLOCK	JOBN		;(  5) CORE LENGTH (IN J) * NUMBER OF JIFFIES
JBTPRV::BLOCK	JOBN		;(  6) PRIVILEGE BITS FOR JOB SET BY LOGIN
TTYTAB::BLOCK	JOBN		;( 10) CONTROLLING (ATTACHED) TTY
COMFLG::BLOCK	<JOBN/^D36>+1	;(***) COMMAND WAITING FOR JOB
JBTNM1::BLOCK	JOBN		;( 31) GFD'd Username (1st half) sixbit chars 1-6
JBTNM2::BLOCK	JOBN		;( 32) GFD'd Username (2nd half) sixbit chars 7-12
JBTWCH::BLOCK	JOBN		;( 35) WATCH BITS (1)0(5)ENABLED(8)0(23)RESPONSE JIFFIES
JBTUPM::BLOCK	JOBN		;(100) # of user pages,,physical UPT/UBR page
JBTPC::	BLOCK	JOBN		;(152) LH=DDB, RH=PC, for Control-T

JBTSCA::BLOCK	JOBN		;(***) TRU scaling word
JBTWRS::BLOCK	JOBN		;(***) LAST 6 JOB STATE CODES (DEBUGGING)
JBTCTX::BLOCK	JOBN*NCTXPG	;(***) DISK ADDRESSES, STATUS BITS FOR CONTEXT PAGES
JBTFIT::BLOCK	JOBN		;(***) DOUBLY LINKED LIST OF JOBS BEING SWAPPED IN.
JBTABT::BLOCK	JOBN		;(***) ROUTINE TO CALL ON SWAP ERROR OR ILL MEM REF
JBTAJF::BLOCK	JOBN		;(***) # FAULTS FOR PAGES IN UWS BUT NOT IN MWS
JBTMWS::BLOCK	JOBN		;(***) MWS WORD (6)JBYPPP(10)JBYMWS,JBYMWL,JBYUWS
JBTICT::BLOCK	JOBN		;(***) IN CORE PROTECT TIME,,QUANTUM RUN TIME
JBTIOA::BLOCK	JOBN		;(***) Unused,,COUNT OF CAN'T SWAP WHILE IO
JBTPGO::BLOCK	JOBN		;(***) ???,,LINK TO NEXT JOB WAITING FOR CORE PAGE
JBTTMP::BLOCK	JOBN		;(***) TMPCOR POINTERS as XWD <QUOTA>,<LINK>
JBTINT::BLOCK	JOBN		;(***) INTASS iaTIM,iaWAK,iaNTQ,iaFEX,iaTRU
JBTFNT::BLOCK	JOBN		;(***) FINASS iaSIP,iaSIC,iaSIS,iaSIA
JBTPNT::BLOCK	JOBN		;(***) FINASS iaLCF,iaECF
JBTENB::BLOCK	JOBN		;(***) CHANELS ENABLED. (1)ENABLED(34)CHANNELS
JBTPIP::BLOCK	JOBN		;(***) CHANELS IN PROGRESS. 1B0=APRENB 1B1=TRAP
JBTAWQ::BLOCK	JOBN		;(***) CHANELS AWAITING REQUEST. 1B0=TRAP ASAP
QUEPCB::BLOCK	JOBN		;(***) PCBIO DATABASE AREA.
JBTPCB::BLOCK	JOBN		;(***) FOR LAYOUT, SEE PCBIO MODULE.
JBTCLB::BLOCK	JOBN		;(***) TABLE USED BY THE CLUB FACILITY
JBTSTA::BLOCK	JOBN		;(***) Used by .USESTAT command
JBTQ::	BLOCK	JOBN		;(***) LH=PREVIOUS JOB, RH=NEXT JOB IN QUEUE

Bsz6!