TITLE FHXKON DEVICE DEPENDENT RC-10/RD-10 SUBROUTINES V030
SUBTTL RG UNDERWOOD/TW  19 MAR 71
XP VFHXKN,030	;VERSION NUMBER FOR MAP AND GLOB

	S$NAME='FHXKON'

;ASSEMBLY INSTRUCTIONS: FHXKON,FHXKON/C_S,KONPAR,FHXKON

ENTRY	FHXKON

INTERN	FHXRED,FHXADD,FHXWRT,FHXFIN,FHXPOS,FHXINT,FHXLTM,FHXUPA,FHXCPY,FHXRCL,FHXSTP
EXTERN	FHXCI1,FHXCOT,FHXDI2,FHXDOT,FHXIWD,FHXCO1,KONCOM
EXTERN	CPOPJ1,CPOPJ,TPOPJ

;DEFINED IN KONKON

REPEAT 0,<
FHXCI1: CONI	FH'N,T2
FHXCOT: CONO	FH'N,(T1)
FHXCO1: CONO	FH'N,(T2)
FHXDI2: DATAI	FH'N,T3
FHXDOT: DATAO	FH'N,T1
FHXIWD: 0		;INITWD
>

;CONO/CONI FORMAT [CONO FUNCTION,*IF RESET OF CONI]
; BIT(S)
; 0-4		.SPARE
;  5		[SPARE]MAINT.SEG
;  6		[SPARE]PROTECTION AREA
; 7-17		[SPARE]
;  18		[SELECT SECTOR COUNTER(1)]DATA TRANSFER IN PROGRESS
;  19		[SELECT SECTOR COUNTER(0)]SEARCH ERROR
;  20		[*]DISK DESIGNATION ERROR
;  21		[*]TRACK SELECT ERROR
;  22		[*]DISK NOT READY
;  23		[*]POWER SUPPLY FAILURE
;  24		[*]DISK PARITY ERROR
;  25		[*]CHAN DATA PARITY ERROR
;  26		[*]CHAN CW PARITY ERROR
;  27		[*]NON-X-MEM
;  28		[*]PROTECTION ERROR(ILLEGAL WRITE)
;  29		[*]OVER-RUN
;  30		[WRITE CW]CW WRITTEN INTO MEMORY
;  31		[*]BUSY
;  32		[*]DONE
; 33-35		PI CHAN ASSG
		;DATAO FORMAT

; 0-1		DISK SELECTION
; 2-10		TRK SELECTION(BIT2=UPPER(1).OR LOWER(0)TRACKS0-99 IN TWO BCD CHAR)
; 11-17		SEGMENT SELECT(TWO BCD CHAR 0-79)
; 18-23		INITIAL PARITY CHARACTER
;   24		DISABLE DISK PARITY ERROR STOP
;   25		DISABLE CHAN PARITY ERROR STOP(CHAN DATA PARITY ONLY)
;   26		WRITE
; 27-34		INITIAL CONTROL WORD ADDRESS
;   35		WRITE EVEN PARITY INTO MEMORY(DURING READ ONLY)

;DATA: FORMAT

; 0-17		SPARE
; 18-23		INITIAL PARITY REGISTER
; 24,25		SPARE
; 26,27		SECTOR COUNTER SELECTED
; 28-35		SECTOR COUNTER


	EXTERNAL DFCADD,DFCCNT
FHXADD=DFCADD	;COMMON ROUTINE FOR DF-10 DEVICES

	EXTERNAL ETSBCN,ETSBDT,ETSCCA,ETSCCO,ETSDCA,ETSDCO
	EXTERNAL ETSGTI,ETSUNI

;FOR FILIO
	EXTERNAL FILINT,KCMDTA,KCMERR,KCMOFL,%OFLMT,%OFLRS,%OFLER

;FROM KON DATA BLOCK

	EXTERNAL KONCUA,KONIOC,KONSWC,KONWRT,KOYPI

;FROM UNIT DATA BLOCK

	EXTERNAL UNIBLK,UNIPPU,UNIRCT,UNYUTP,UNPDEV
	EXTERNAL UNYBPT,UNYPPY,UNYPUN,UNPUTP,UNIUTP
;KONTROLER BITS

;CONI

BIT22==(1B3)	;22 BIT DF-10
DRUM==(1B4)	;UNIT IS A DRUM
MAINT==(1B5)	;MAINENENCE BIT ON KONTROLLER SET

DFCERR==1B18	;SOFTWARE BIT TO SAY CHANNEL TERMINATION NOT RIGHT
SRCERR==1B19	;SEARCH ERROR
UNTERR==1B20	;UNIT ERROR (MORE THAN 1 UNIT)
TRKERR==1B21	;TRACK-SECTOR ERROR
NOTRDY==1B22	;NOT READY
POWFAL==1B23	;POWER FAILURE
DEVPAR==1B24	;DEVICE PARITY ERROR
DATPAR==1B25	;DATA (CORE) PARITY ERROR
CWPAR==1B26	;CONTROL WRRD PARITY ERROR
NXM==1B27	;NO SUCH MEMORY
ILLWRT==1B28	;ILLEGAL WRITE
DLATE==1B29	;DATA LATE
BUSY==1B31	;DEVICE IS BUSY
DONE==1B32	;DEVICE IS DONE

ALLERR==SRCERR!DLATE!DATPAR!CWPAR!NXM!DEVPAR!UNTERR!TRKERR!NOTRDY!POWFAL!ILLWRT!DFCERR

;CONO BITS. CLEAR ALL ERROR FLAGS

ALLCLR==177710
;SUBROUTINES TO INITIATE DATA TRANSFER.(ENTER WITH U AND J SET-UP)

FHXKON:
FHXRED: TDZA	T4,T4		;HERE TO READ
FHXWRT: MOVEI	T4,1B26		;HERE TO WRITE
	MOVE	T1,UNIBLK(U)	;T1 _ LOGICAL BLOCK NUMBER
	PUSHJ	P,CNVBLK	;CONVERT LOGICAL BLOCK TO BARE DATAO IN ITWD
	IOR	T1,KONIOC(J)	;INSERT INIT CHAN CNTL WD ADDR
	IORI	T1,(T4)		;  AND FUNCTION CNTL FLAGS
	MOVE P3,T1	;SAVE INSTRUCTION HERE
	MOVE P1,KONCOM(J)	;GET THE COMMAND LIST POINTER
	ANDI T1,776	;JUST GET THE INITIAL ADDRESS
	HRRZM P1,(T1)	;STORE POINTER
	SETZM 1(T1)	;ZERO CHANNEL STORE WORD
	SETZM KONSWC(J)	;AND SAVED WORD COUNT
	ADD P1,[1,,0]	;TO LEAVE ROOM IN CASE NOT FULL BLOCK
	MOVEI P2,777600	;MAX SIZE TRANSFER IS ALL WE CAN GET
	POPJ P,

FHXFIN:	TRNE P2,177	;IS THE TRANSFER EVEN?
	TRNN P3,1B26	;OR A READ
	JRST FINEVN	;EVEN BLOCKS OR A READ
	ANDI P2,177	;WE MUST FILL IT OUT
	MOVNS P2
	HRLS P2
	SKIPGE KONWRT(J)
	LSH P2,4	;FOR 22-BIT DF-10
	HRRI P2,FINBUF-1
	MOVEM P2,(P1)	;STORE THE EXTRA COMMAND
	ADDI P1,1
FINEVN:	SETZM (P1)
	LDB T2,KOYPI
	MOVE T1,P3
	HRRZM U,KONCUA(J)
	XCT FHXDOT(J)	;START DEVICE
	XCT FHXCO1(J)	;AND SET PI
	POPJ P,

FINBUF:	BLOCK 177	;177 WORDS OF 0 TO FINISH TRANSFER WITH
;CONVERT LOGICAL BLOCK IN T1 TO DISK DATAO INITWD IN T1(LOGICAL BLOCK# IS LOST)

CNVBLK:	LDB	T3,UNYBPT	;GET # BLOCKS/TRACK
	IDIVI	T1,(T3)		;EXTRACT TRACK ADDR, (T1)=TRACK, (T2)=SEGMENT
	PUSH	P,T2		;SAVE SEGMENT
	IDIVI	T1,^D10		;CONVERT TRACK TO BCD
	CAIL	T1,^D10		;A SHORT-CUT BECAUSE RANGE=0-199/10=0-19
	ADDI	T1,6		;A BCD TENS CHAR
	LSH	T1,4		;LEFT JUSTIFIED TO MAKE ROOM FOR UNITS
	IOR	T1,T2		;NOW THE UNITS, HENCE A BCD TRACK ADDR
	ROT	T1,-^D11		;PROPERLY JUSTIFIED FOR DATAO WD
	EXCH	T1,(P)		;SAVE TRACK AND FETCH SEGMENT
	LDB	T2,UNYUTP	;GET UNIT TYPE (RD-10 =0 RM10B =1)
	TRC	T2,1		;SET RD=1 - RM=0
	LSH	T1,1(T2)		;SEGMENT*2(OR 4)=128 WORD BLOCK
	IDIVI	T1,^D10		;CONVERTED TO BCD ADDR.
	LSH	T1,4		;LEFT JUSTIFY TENS CHAR
	IOR	T1,T2		;INSERT UNITS CHAR
	HRLZS	T1		;JUSTIFY FOR DATAO
	IORM	T1,(P)		;AND SAVE AWAY
	LDB	T1,UNYPUN	;T1 _ UNIT NUMBER
	ROT	T1,-2		;JUSTIFIED
	IORM	T1,(P)		;UNIT NUMBER SAVED AWAY
	JRST	TPOPJ		;EXIT
;THIS DEVICE DOESN'T1 POSITION!
FHXPOS:	STOPCD	CPOPJ1

;SUBROUTINE TO COMPUTE ROTATIONAL LATENCY
;CALL:	MOVE	T1,LOGICAL BLOCK DESIRED
;	PUSHJ	P,FHXLTM
;	  ERROR RETURN-DEVICE NOT READY OR BUSY
;	OK RETURN, T1 CONTAINS NO. OF MICROSECONDS TILL GET TO SECTOR
;ROUTINE IS WRITTEN TO BE FAST AS POSSIBLE SINCE CALLED IN LOOP ON PI LEVEL

FHXLTM:	LDB	T2,UNYPUN	;NO, GET PHYSICAL UNIT NO. ON CONTROL
	LSH	T2,^D16		;SHIFT TO UNITS POSITION
	LDB	T3,KOYPI	;PI ASSIGNMENT FOR CONTROLLER
	IOR	T2,T3		;PREPARE T2
	XCT	FHXCO1(J)	;SELECT UNIT AND SECTOR COUNTER-CONO FH'N,T2
	XCT	FHXDI2(J)	;READ SECTOR COUNTER
	ANDI	T3,377		;MASK OUT ALL BUT SECTOR INFO
FHXLTL:	MOVE	T2,T3		;SAVE SECTOR
	XCT	FHXDI2(J)	;READ SECTOR COUNTER AGAIN
	ANDI	T3,377		;MASK OUT ALL BUT SECTOR INFO
	CAME	T3,T2		;ARE THEY THE SAME?
	JRST	FHXLTL		;NO, READ AGAIN-COUNTERS IN TRANSITION
	ANDI	T2,17		;YES, MASK FOR UNITS POSITION
	LSH	T3,-4		;RIGHT JUSTIFY TENS CHAR
	IMULI	T3,^D10		;CONVERT TO BINARY
	ADDI	T3,(T2)		;ADD UNITS FOR BINARY
	MOVEI	T2,UNPUTP	;UNIT TYPE BIT
	TDNN	T2,UNIUTP	;IS IT AN RM10B DRUM
	JRST	FHXLTD		;NO, RD10 DISK

;HERE TO COMPUTE LATENCY FOR RM10B DRUM (BRYANT) ON RC10
	IDIVI	T1,^D30		;NO, COMPUTE DESIRED BLOCK FROM LOGICAL BLOCK NO.
				; 30=NO. OF 128 WORD BLOCKS PER REVOLUTION
	LSH	T2,1		;CONVERT TO DESIRED 64 WORD SECTOR
	SUBI	T2,3(T3)	;DISTANCE=DESIRED-ACTUAL 64 WORD SECTOR
				;ALLOW FOR 3 SECTORS AHEAD=850 MICROSECS.
	JUMPGE	T2,FHXLT1	;IS DISTANCE POSITIVE?
	ADDI	T2,^D61		;NO, ADD NO. OF 64 WORD SECTORS PER REV.
	JUMPL	T2,.-1		;IS IT STILL NEGATIVE (3 OUT OF 3600 TIMES)?
FHXLT1:	IMULI	T2,^D285	;NO, CONVERT TO NO. OF MICROSECONDS
				; 285 MICROSECONDS PER 64 WORD SECTOR.
	JRST	FHXLTE		;MOVE RESULT TO T1 AND SKIP RETURN

;HERE TO COMPUTE LATENCY FOR RD10 DISK (BURROUGHS) ON RC10
FHXLTD:	IDIVI	T1,^D20		;COMPUTE DESIRED BLOCK FROM LOGICAL BLOCK NO.
				; 20=NO. OF 128 WORD BLOCKS PER REVOLUTION
	LSH	T2,2		;CONVERT TO DESIRED 32 WORD SECTOR.
	SUBI	T2,2(T3)	;DISTANCE=DESIRED-ACTUAL 32 WORD SECTOR
				; ALLOW FOR 2 SECTORS AHEAD=262 MICROSEC.
	JUMPGE	T2,FHXLT2	;IS DISTANCE POSITIVE?
	ADDI	T2,^D81		;NO, ADD NO. OF 32 WORD SECTORS PER REV.
	JUMPL	T2,.-1		;IS IT STILL NEGATIVE (2 OUT OF 6400 TIMES)?
FHXLT2:	IMULI	T2,^D431	;YES, CONVERT TO NO. OF MICROSECONDS
FHXLTE:	MOVE	T1,T2		;RETURN IN T1
FHXSTP:			;NO STOP ROUTINE, JUST RETURN
FHXRCL:	POPJ	P,		;RETURN - RECALLIBRATE GIVES ERROR RETURN

;SUBROUTINE TO INTERFACE FHX WITH FILINT
;ENTERED FROM COMMON WITH AC-J AND P SET-UP

FHXINT:	XCT FHXCI1(J)	;CONI DATA
	HRRZ U,KONCUA(J)
	CAMN U,ETSUNI
	PUSHJ P,FAKCNI
	TRZ T2,DFCERR	;RESERVED FOR SOFTWARE
	PUSH P,T2	;SAVE CONI
	MOVE T2,KONIOC(J)
	PUSHJ P,DFCCNT	;CHECK CHANNEL TERMINATION
	MOVEI T2,DFCERR
	CAME T1,KONSWC(J)
	IORM T2,(P)	;NOT THE SAME
	ADDI T1,177	;FIND NUMBER OF BLOCKS
	LSH T1,-7
	SKIPGE T1
	MOVEI T1,1	;AT LEAST 1
	EXCH T1,(P)
	PUSH P,T1	;SAVE CONI AGAIN
	TRNN T1,ALLERR
	JRST DATFIN	;NO ERRORS
	SKIPE UNIRCT(U)	;FIRST ERROR?
	JRST DATERF	;NO
	TRNE T1,DLATE
	MOVE T2,RCV100	;SET RECOVERY MODE
	TRNE T1,SRCERR
	MOVE T2,RCV1
	TRNE T1,DATPAR!CWPAR!NXM!DFCERR	;CHANNEL
	MOVE T2,RCV20D
	TRNE T1,DEVPAR
	MOVE T2,RCV20
	TRNE T1,UNTERR!TRKERR!NOTRDY!POWFAL!ILLWRT
	MOVE T2,RCV1D	;JUST RETRY ONCE, PROBABLY PERM
	MOVEM T2,UNIRCT(U)
DATERF:	MOVSI T1,KCMERR
	IORM T1,-1(P)
DATFIN:	XCT FHXDI2(J)
	CAMN U,ETSUNI
	PUSHJ P,FAKDTI
	MOVEI T1,ALLCLR
	XCT FHXCOT(J)	;CLEAR ERRORS
	POP P,T2	;CONI
	POP P,T1	;COM WORD
	TLO T1,KCMDTA	;SET DATA BIT
	PJRST FILINT	;AND GO

	DEFINE RCVWRD(A,B)
<	XWD 200000+UNPDEV*B,A>

RCV1D:	RCVWRD (1,1)
RCV1:	RCVWRD (1,0)
RCV20D:	RCVWRD (^D20,1)
RCV20:	RCVWRD (^D20,0)
RCV100:	RCVWRD (^D100,1)
FAKCNI:	SOSL ETSGTI	;ENOUGH GOOD TRANSFERS YET?
	POPJ P,
	OR T2,ETSCCO	;FIX UP CNI WORD
	ANDCAM T2,ETSCCA
	SOSGE ETSBCN
	SETZM ETSUNI
	POPJ P,

FAKDTI:	SKIPL ETSGTI
	POPJ P,
	OR T3,ETSDCO	;FIX UP DATAI WORD
	ANDCAM T3,ETSDCA
	SOSGE ETSBDT
	SETZM ETSUNI
	POPJ P,
;HERE TO CHECK THE CAPACITY & STATUS OF A UNIT

FHXCPY:	XCT FHXCI1(J)
	MOVEI T4,%OFLMT	;MAINT MODE
	TLNE T2,MAINT
	JRST FHXOFL	;SAY OFF-LINE IF MAINT SWITCH
	MOVE T1,KONCOM(J)
	SETZB T1,(T1)	;SET UP A HALT
	HRRZM T1,@KONIOC(J)
	XCT FHXCOT(J)	;CLEAR INTERUPT
	LDB T1,UNYPUN
	ROT T1,-2
	TLO T1,177777	;THIS SHOULD BE AN ILLEGAL ADDRESS
	IOR T1,KONIOC(J)
	XCT FHXDOT(J)	;SEND IT
	MOVEI T1,^D50	;WAIT JUST A LITTLE WHILE
	MOVEI T4,%OFLRS	;NO RESPONSE
	XCT FHXCI1(J)
	TRNE T2,DONE	;FOR DONE
	JRST .+3
	SOJG T1,.-3
	JRST FHXOFL
	MOVEI T4,%OFLER	;ERROR BITS
	TDNE T2,[1377,,UNTERR!NOTRDY!POWFAL!ILLWRT!BUSY]	;CHECK ERROR OR PORTECTED
	JRST FHXOFL	;AND SAY OFF-LINE
	MOVEI T4,0	;RD10
	TLNE T2,DRUM
	MOVEI T4,1	;RM10-B
	DPB T4,UNYUTP
	SETZM UNIBLK(U)
	HRRZ T1,CAPDAT(T4)
	DPB T1,UNYBPT	;BLOCKS PER TRACK
	HLRZ T1,CAPDAT(T4)
	LSH	T1,-2
	MOVEM	T1,UNIPPU(U)
	DPB	T1,UNYPPY
	MOVEI T1,ALLCLR
	XCT FHXCOT(J)	;CLEAR ALL ERROR FLAGS
	MOVSI T1,(1B0)
	LDB T2,UNYPUN
	MOVNS T2
	LSH T1,(T2)	;SET UNIT BIT
	PJRST FILINT	;AND ACT LIKE POSITION INTERUPT

CAPDAT:	XWD ^D4000,^D20		;RD-10 DATA
	XWD ^D2700,^D30		;RM-10B DATA

FHXOFL:	MOVEM T4,UNIBLK(U)
	MOVEI T1,ALLCLR
	XCT FHXCOT(J)	;CLEAR ERROR CONDITIONS AND DONE FLAG
	MOVSI T1,KCMOFL
	PJRST FILINT	;OFF-LINE INDICATION
;HERE TO SEE IF AN RC-10 KONTROLLER IS UP
; AND IF SO, LEAVE PI SET UP FOR TIMESHARING.
; IF NOT, LEAVE ERRORS IN THE LIGHTS

FHXUPA:	LDB	T1,KOYPI		;GET PI FOR THIS KONTROLLER
	TRO	T1,ALLCLR	;CLEAR ALL ERROR FLAGS
	XCT	FHXCOT(J)	;CONO FH'N,(T1)
	XCT	FHXCI1(J)	;CONI FH'N,T2
	MOVSI T1,(1B0)	;SET TO MARK FOR 22-BIT DF-10
	TLNN T2,BIT22
	ANDCAM T1,KONWRT(J)	;NO
	TLNE T2,BIT22
	IORM T1,KONWRT(J)	;YES
	TRNN	T2,POWFAL!BUSY!DONE	;ANYTHING WRONG
	TRNN	T2,7		;ARE THE PI BITS THERE?
	POPJ P,		;YES, ERROR RETURN
	JRST	CPOPJ1		;OK RETURN

	LIT

	END
  