TITLE	CTYIO - Examples on how to do I/O to the CTY on various CPUs
SUBTTL	Joe Smith, for informational purposes only (not part of the Monitor)

EBR=0		;Use page 0 for the EPT
EPT=EBR*1000	;Address of the EPT
UBR=1		;Use page 1 for the UPT
UPT=UBR*1000	;Address of the UPT

TTYINI:	SETZB	1,KSFLAG	;Check processor type
	BLT	1,0		;From 0 to 0 end at 0
	MOVEM	1,KLFLAG	;Zero for CPUs that use DATAO TTY, (KA,KI,F3)
	JUMPE	1,CPOPJ		;All done if KA,KI,F3
	SETZB	3,5		;Clear unused word and byte pointer
	MOVEI	4,1		;Clear flags, string is 1 byte long
	EXTEND	1,[CVTBDO]	;Attempt to convert binary to decimal string
	TLNN	4,200000	;This bit is set by a deliberate bug in KL
	SETOM	CTYIOF		;KS and later DEC processors do not set 200000
;If CTYIOF is zero, the CPU is a KI or an F3, use DATAO TTY.
;If CTYIOF is positive, the CPU is a KL, use CONO DTE to signal the PDP-11.
;If CTYIOF is negative, the CPU is a KS, use CONO APR to signal the 8080.

  ;KL-10 definitions
DTE==200	;DTE DEVICE CODE
CL11PT==1B26	;001000 CONO bit to CLEAR DOORBELL
TO11DB==1B22	;020000 CONO bit to RING DOORBELL
DTEFLG=EPT+444	;DTE OPERATION DONE FLAG
DTEF11=EPT+450	;DATA FROM 11
DTECMD=EPT+451	;COMMAND TO 11
 .DTESP==11B27	;004400 ENTER SECONDARY PROTOCOL COMMAND
 .DTCTO==10B27	;004000 CTY OUTPUT CHAR COMMAND
 .DTRSW==03B27	;001400 READ SWITCHES COMMAND
DTEMTD=EPT+455	;CTY OUTPUT DONE
DTEMTI=EPT+456	;CTY INPUT READY

SUBTTL	TYI - Teletype input

TYI:	PUSHJ	P,XXXX		;Is there a character available?
	  JRST	TYI		;Not yet, wait for one
	POPJ	P,		;Character is in T1

xxxx:	SKIPE	CTYIOF		;For a KI or F3?
	 JRST	XXXKLS		;No
	CONSO TTY,40		;WAIT FOR A KEY TO BE ST(R)UCK
	JRST .-1(R)		; ..
	DATAI TTY,C		;GET THE CHAR
>;END IFCPU(<KI,F3>)
IFCPU(KL)<
	SETZ	C,
	EXCH	C,DTEMTI
	JUMPE	C,.-1(R)
	MOVE	C,DTEF11
>;END IFCPU(KL)
IFCPU(KS)<
	SKIPE C,CTYIWD		;CHARACTER READY?
	 TRZN C,CTYIV
	  JRST .-2(R)
	SETZM CTYIWD		;YES, SAY READY TO GET NEXT ONE
>;IFCPU(KS)
TYIC:	PUSHJ P,TYO(R)		;ECHO IT
IFCPU(<KI,F3>)<
TYO:	DATAO TTY,C		;SEND OUT CHAR
	CONSZ TTY,20		;WAIT FOR IDLE
	JRST .-1(R)		; ..
	POPJ	P,		;DONE.
>;END IFCPU(<KI,F3>)

IFCPU(KL)<
TYO:	ANDI	C,377
	MOVEI	C,<.DTMTO>B27(C)	;MAKE COMMAND	
	MOVEM	C,DTECMD
	CONO	DTE,TO11DB	;RING DOORBELL
	ANDI	C,377
	PUSH	P,C
	SETZ	C,
	EXCH	C,DTEMTD	;WAIT FOR OUTPUT DONE
	JUMPE	C,.-1(R)
	POP	P,C
	POPJ	P,

SPCINI:	CONO	PAG,		;EPT IN PAGE 0
	SETZM	DTEMTI
	SETZM	DTEMTD
	SETZM	DTEF11
	MOVEI	A,<.DTMMC>B27
	MOVEM	A,DTECMD	;GIVE "ENTER 2NDARY PROTOCOL" CMD
	MOVEI	A,10		;TRY 8 TIMES
SPCIN1:	CONO	DTE,TO11DB	;RING THE DOORBELL
	MOVSI	C,10		;WAIT FOR RESPONSE
	SKIPN	DTEFLG
	SOJG	C,.-1(R)
	SOJGE	C,SPCIN2(R)	;DONE
	SOJGE	A,SPCIN1(R)	;TRY AGAIN MAYBE
	HALT
SPCIN2:	SETZM	DTEFLG
	POPJ	P,
>;END IFCPU(KL)

IFCPU(KS)<
TYO:	TRO C,CTYOV
	MOVEM C,CTYOWD
	WRAPR LP.SSF+LP.CIN
	SKIPE CTYOWD
	 JRST .-1(R)
	TRZ C,CTYOV
	POPJ P,
>;IFCPU(KS)
;THE FOLLOWING LOCATIONS ARE ESTABLISHED BY SOFWARE CONVENTION
; BETWEEN THE KL-10 AND ITS CONSOLE FRONT END.
; THEY ARE USED FOR THE "SECONDARY PROTOCOL".

XP SPCDBG,444		;BEGINNING OF SPC DATA AREA
XP SPCFLG,444		;SET NON-ZERO WHEN SECONDARY PROTOCOL COMMAND
			; IS COMPLETE. MUST
			; BE CLEARED BEFORE SECONDARY PROTOCOL COMAND IS ISSUED.

XP SPCF11,450		;FROM-11 DATA.
XP SPCCMW,451		;SPC COMMAND WORD
	XP .DTESP,11B27		;ENTER SECONDARY PROTOCOL
	XP .DTCTO,10B27		;OUTPUT CHARACTER ON CTY
	XP .DTRSW,3B27		;READ SWITCHES INTO SPCSWR AND SPCF11.
XP SPCMTD,455		;CTY OUTPUT DONE FLAG. (SPCFLG SET IMMEDIATELY,
			; THIS ONE SETS WHEN CHAR IS ACTUALLY OUT.)
XP SPCMTI,456		;CTY INPUT PRESENT. IF NON-ZERO, CTY
			; CHAR IS PRESENT IN SPCF11.
	XP SPCSWR,457	;SWITCHES APPEAR HERE.
XP SPCDND,457		;END OF SPC DATA AREA
	  XP SS4,4	;"SENSE SWITCH 4" (USED FOR AUTO RELOAD SELECTION.)

			; (460-507 RESERVED FOR USE BY HARDWARE)


TTYINI:	SETZ	T1,		;CHECK PROCESSOR TYPE
	BLT	T1,0		;BLT from 0 to 0 end at 0
	JUMPN	T1,KI.INI	;KL and KS return <1,,1>, KI and F3 leave zero
KI.INI:	SETZM	KLFLAG		;NOT A KL
	DATAO PAG,[400000+UBR,,400000+EBR]
	CONI APR,T1		;GET SENSE SWITCH SETTINGS
	HLRZM T1,SWITCH		;Store as last 6 bits in word
	POPJ P,

KL.INI:	SETOM	KLFLAG		;FLAG KL10 CPU
	CONO	PAG,EBR		;SET UP EPT
	DATAO	PAG,[LG.LUB+UBR];And UPT
	SETZM	DTEMTI
	SETZM	DTEMTD
	SETZM	DTECMD
	SETZM	DTEF11
	SETZM	DTEFLG
	CONO	DTE,CL11PT
	MOVEI	T1,.DTESP	;GIVE CMD TO ENTER 2DARY PROTOCOL
	MOVEM	T1,DTECMD
	MOVEI	T2,10
KTY1:	CONO	DTE,TO11DB	;RING DOORBELL
	MOVSI	T1,10		;AND WAIT FOR COMMAND TO BE RECEIVED
	SKIPN	DTEFLG
	SOJG	T1,.-1
	JUMPG	T1,KTY2
	SOJGE	T2,KTY1
	HALT	.		;COMMAND NOT RECEIVED - DIE
KTY2:	MOVEI T1,.DTRSW		;Ask to read switches
	MOVEM T1,DTECMD
	SETZM DTEFLG
	CONO DTE,TO11DB
	SKIPN DTEFLG
	JRST .-1
	MOVE T1,DTEF11
	MOVEM T1,SWITCH
	POPJ P,

TYO:	SKIPE	KLFLAG
	 JRST	KL.TYO
KI.TYO:	CONSZ TTY,20		;Check for output done
	 JRST .-1
	DATAO TTY,CH		;Send to CTY
	POPJ	P,

KL.TYO:	ADDI	CH,.DTCTO	;Make into command
	MOVEM	CH,DTECMD
	CONO	DTE,TO11DB
	HRLM	CH,(P)
	SETZ	CH,
	EXCH	CH,DTEMTD
	JUMPE	CH,.-1
	HLRZ	CH,(P)
	ANDI	CH,377
	POPJ	P,

TYI:	SKIPE	KLFLAG
	 JRST	KL.TYI
KI.TYI:	CONSZ TTY,40		;Check for input done
	 JRST .-1
	DATAI TTY,CH		;Read from CTY
	POPJ	P,

KL.TYI:	SKIPN	DTEMTI		;WAIT FOR INPUT READY
	JRST	.-1
	MOVE	CH,DTEF11
	SETZM	DTEMTI
	POPJ	P,


;from DDT.MAC

KLXTYO:	PUSHJ	P,EBRIDX	;GET INDEX OF EPR IN TT2
	MOVEI	T,.DTMTO(T)	;GET MONITOR OUTPUT COMMAND AND CHAR IN T
	MOVEM	T,DTECMD(TT2)	;PUT IN COMMAND WORD
	SETZM	DTEMTD(TT2)	;CLEAR DONE FLAG.
	XCT	DING11		;RING THE DOORBELL
	SKIPN	DTEMTD(TT2)	;DONE YET?
	JRST	.-1		;NO, LOOP
	ANDI	T,377		;CLEAN UP CHARACTER IN T
	POPJ	P,0		;RETURN

KSXTYO:	SKIPE	CTYOWD		;WAIT TIL EMPTY
	JRST	.-1
	TRO	T,CTYVAL	;SET VALID FLAG
	MOVEM	T,CTYOWD
	WRAPR	LP.SSF+SP.808	;WHAP THE 8080
	SKIPE	CTYOWD		;WAIT UNTIL THE CHAR IS TAKEN
	JRST	.-1		;LOOP UNTIL TAKEN
	ANDI	T,CTYCHR	;CLEAR UP CHAR
	POPJ	P,

XLISTE:	SKIPE	KLFLAG
	JRST	KLXLIS
	SKIPE	KSFLAG		;SKIP IF NOT A KS
	JRST	KSXLIS
	CONSO TTY,40	;LISTEN FOR TTY
	POPJ P,
	DATAI TTY,T
XLIST1:	ANDI T,177
	JRST CPOPJ1

KLXLIS:	PUSHJ	P,EBRIDX	;GET EPT INDEX IN TT2
	SKIPN	DTEMTI(TT2)	;ANY INPUT YET?
	POPJ	P,		;NO
	MOVE	T,DTEF11(TT2)	;GET IT
	SETZM	DTEMTI(TT2)	;YES
	JRST	XLIST1

KSXLIS:	SKIPN	CTYIWD		;SKIP IF THERE IS INPUT
	POPJ	P,		;ELSE RETURN
	MOVE	T,CTYIWD	;GET THE CHARACTER
	SETZM	CTYIWD		;CLEAR THE INPUT WORD
	JRST	XLIST1	


XTTYRE:	SKIPE	KLFLAG
	JRST	LTTYRE		;YES.
	SKIPE	KSFLAG
	JRST	STTYLE		;JUMP IF KS CPU
	MOVEI  T,3410
TTY1:	MOVEI W2,400000
	CONSZ TTY,120
	SOJG W2,.-1
	CONI TTY,SAVTTY
	DATAI TTY,W2
	HRLM W2,SAVTTY
	CONO TTY,(T)
	SKIPN	F3FLAG		;NO FILLS IF F3
	SKIPL FILCNT
	POPJ P,
	MOVEI T,0	;NOW MUST DETERMINE SPEED
	CONO APR,APRCLK
	CONSO APR,APRCLK	;WAIT FOR A CLOCK TICK
	JRST .-1
	CONO APR,APRCLK	;RESET
	DATAO TTY,T	;SEND A NULL
	CONSO TTY,20
	JRST .+5	;FINISHED
	CONSO APR,APRCLK
	JRST .-3	;AND WATCH FOR CLOCK TICK
	CONO APR,APRCLK	;RESET
	AOJA T,.-5	;COUNT CLOCK TICKS
	MOVEI W2,0
	CAIGE T,5
	MOVEI W2,2	;AT LEAST 15 CPS
	CAIGE T,3
	MOVEI W2,5	;30 CPS
	MOVEM W2,FILCNT
	POPJ P,

XTTYLE:	SKIPE	KLFLAG
	JRST	LTTYLE
	SKIPE	KSFLAG
	JRST	STTYLE
	MOVE T,SAVTTY
	TRZ T,160
	TRO T,3600
	TRNE T,AG		;SKIP IF NOT A KS
	JRST	KSXLIS
	CONSO TTY,40	;LISTEN FOR TTY
	POPJ P,
	DATAI TTY,T
XLIST1:	ANDI T,177
	JRST CPOPJ1

KLXLIS:	PUSHJ	P,EBRIDX	;GET EPT INDEX IN TT2
	SKIPN	DTEMTI(TT2)	;ANY INPUT YET?
	POPJ	P,		;NO
	MOVE	T,DTEF11(TT2)	;GET IT
	SETZM	DTEMTI(TT2)	;YES
	JRST	XLIST1

KSXLIS:	SKIPN	CTYIWD		;SKIP IF THERE IS INPUT
	POPJ	P,		;ELSE RETURN
	MOVE	T,CTYIWD	;GET THE CHARACTER
	SETZM	CTYIWD		;CLEAR THE INPUT WORD
	JRST	XLIST1	


XTTYRE:	SKIPE	KLFLAG
	JRST	LTTYRE		;YES.
	SKIPE	KSFLAG
	JRST	STTYLE		;JUMP IF KS CPU
	MOVEI  T,3410
TTY1:	MOVEI W2,400000
	CONSZ TTY,120
	SOJG W2,.-1
	CONI TTY,SAVTTY
	DATAI TTY,W2
	HRLM W2,SAVTTY
	CONO TTY,(T)
	SKIPN	F3FLAG		;NO FILLS IF F3
	SKIPL FILCNT
	POPJ P,
	MOVEI T,0	;NOW MUST DETERMINE SPEED
	CONO APR,APRCLK
	CONSO APR,APRCLK	;WAIT FOR A CLOCK TICK
	JRST .-1
	CONO APR,APRCLK	;RESET
	DATAO TTY,T	;SEND A NULL
	CONSO TTY,20
	JRST .+5	;FINISHED
	CONSO APR,APRCLK
	JRST .-3	;AND WATCH FOR CLOCK TICK
	CONO APR,APRCLK	;RESET
	AOJA T,.-5	;COUNT CLOCK TICKS
	MOVEI W2,0
	CAIGE T,5
	MOVEI W2,2	;AT LEAST 15 CPS
	CAIGE T,3
	MOVEI W2,5	;30 CPS
	MOVEM W2,FILCNT
	POPJ P,

XTTYLE:	SKIPE	KLFLAG
	JRST	LTTYLE
	SKIPE	KSFLAG
	JRST	STTYLE
	MOVE T,SAVTTY
	TRZ T,160
	TRO T,3600
	TRNE T,10
	TRZ T,200
	JRST TTY1

;ROUTINES TO SAVE AND RESTORE KL10 TTY STATUS
; WHICH AMOUNTS TO SAVING AND RESTORING DTE INTERRUPT
; INSTRUCTION IN LOCATION DTEII

LTTYLE:	MOVE	T,MSTRDT	;GET ID OF MASTER DTE
	LSH	T,3		;FIND EPT CHUNK
	MOVE	W2,SAVEBR	;THE OLD EBR
	LSH	W2,^D9		;MAKE IT A CORE ADDRESS
	ADDI	W2,0(T)		;POINT TO BEGINNING OF EPT CHUNK
	MOVEI	T,DTEII(W2)	;WHERE TO DO RESTORE
	HRLI	T,SAVII		;WHERE TO RESTORE FROM
	BLT	T,DTEDRW(W2)	;UP THROUGH DEPOSIT, LAST WORD
	SETZM	SAVII		;NOTE PGM MODES NOW IN EFFECT
	CONSZ	PAG,TRPENB	;IS PAGGING NOW ENABLED?
	SKIPN	DTEEPW(W2)	;YES SECONDARY PROTOCOL IN EFFECT,
	POPJ	P,		;JUST RETURN, DON'T TURN IT OFF
	MOVEI	T,.DTNMC	;WE WERE IN REGULAR PROTOCOL, SETUP OFF COMMAND
	JRST	DTEDCM		;DO COMMAND



;CODE TO SAVE TTY STATE (I.E. THE DTE STATE FOR THE MASTER -11)

LTTYRE:	CONI	PAG,T		;READ EBR
	ANDI	T,017777
	LSH	T,^D9
	CONO	APR,@RSTNXM
	SKIP	(T)
	TLNN	T,-1		;IF GREATER THAN 256K, DON'T USE IT.
	CONSZ	APR,LP.NXM
	JRST	[CONO PAG,0
		 SETZ T,
		 JRST .+1]
	LSH	T,-^D9		;BACK TO PAGE NUMBER
	MOVEM	T,SAVEBR
	SKIPE	SAVII		;PGM MODES IN EFFECT?
	JRST	LTTYR1		;NO, DON'T SAVE
	MOVSI	T,-DTEN		;POLL ALL DTES
	MOVE	W2,[CONSO DTE,DTEPRV]	;GET TEST WORD
	MOVE	W1,[CONSO DTE,PI0ENB+7]	;TEST FOR PI0 ENABLED
				;   OR PI ASSIGNMENT UP
	MOVE	W,[CONO DTE,0]	;PROTOTYPE CONO
LTTYR2:	XCT	W1		;PI 0 UP ON THIS GUY?
	JRST	[HRRI W,PIENB+PI0ENB	;NO. SET PI0
		XCT W
		XCT W1		;NOW UP?
		JRST LTTYR4	;NO. DOESN'T EXIST THEN
		TRZ W,PI0ENB	;TURN OFF ZERO
		XCT W		;DO IT
		JRST .+1]	;AND PROCEED
	XCT	W2		;THIS THE MASTER?
	JRST	[MOVEI T,0(T)	;YES. GET ITS NUMBER
		MOVEM T,MSTRDT	;SAVE IT
		LSH T,^D<35-9>	;POSITION CODE IN B9
		ADD T,[CONO DTE,TO11DB] ;GET THE INSTRUCTION
		MOVEM T,DING11	;SAVE IT
		JRST LTTYR3]	;AND DONE
LTTYR4:	ADD	W2,[1B9]	;NEXT DTE
	ADD	W,[1B9]
	ADD	W1,[1B9]	;ADJUST ALL I/O INSTRUCTIONS
	AOBJN	T,LTTYR2	;POLL ALL OF THEM
	HALT	.		;CAN'T HAPPEN!!!!!!!!!!!!!
LTTYR3:	MOVE	T,SAVEBR	;GET EBR AGAIN
	LSH	T,^D9		;MAKE IT A CORE ADDRESS
	MOVE	W2,MSTRDT	;GET MASTER'S NUMBER
	LSH	W2,3		;HIS CHUNK
	ADD	T,W2		;THE POSITION IN THE EPT
	MOVE	W2,T		;SAVE EBR FOR INDEXING
	MOVSI	T,DTEII(T)	;START OF EPT LOCATIONS TO SAVE
	HRRI	T,SAVII	;WHERE TO SAVE THEM
	BLT	T,SAVDRW
	SKIPN	DTEEPW(W2)	;USING PRIMARY PROTOCAL?
	JRST	LTTYR1		;NO. GO ON
	MOVE	T,MSTRDT	;GET MASTER'S ID
	LSH	T,^D<35-9>	;POSITION CODE IN B9
	ADD	T,[CONSZ DTE,TO11DB]	;GET TEST INSTRUCTION
	XCT	T		;WAIT FOR -11 TO ANSWER ALL DOORBELLS
	JRST	.-1		;THE WAIT
LTTYR1:	MOVSI	T,(HALT)
	MOVEM	T,DTEII(W2)	;NO INTERRUPTS
	SETZM	DTEEPW(W2)	;CLEAR EXAMINE PROTECTION WORD
	MOVEI	T,.DTMMC	;TURN ON SECONDARY TTY I/O SYSTEM
DTEDCM:	PUSHJ	P,EBRIDX	;GET EPT INDEX IN TT2
	SETZM	DTEFLG(TT2)	;CLEAR DONE FLAG
	MOVEM	T,DTECMD(TT2)	;STORE COMMAND FOR 11
	XCT	DING11		;RING HIS DOORBELL
	SKIPN	DTEFLG(TT2)	;WAIT FOR FINISH
	JRST	.-1
	POPJ	P,		;RETURN

;ROUTINE TO LOAD EPT ADDRESS IN TT2. CALLED BY ROUTINES WISHING
;TO LOCATE THE MONITOR PROTOCOL LOCATIONS

EBRIDX:	MOVE	TT2,SAVEBR	;GET EBR ADDRSSS
	LSH	TT2,^D9		;MAKE IT A CORE ADDRESS
	POPJ	P,		;AND DONE

XTEXIN:	PUSHJ P,XTIN	;INPUT SUBROUXTINE FOR TEXT MODES
	TRNN T,140
	JRST XTOUT	;ECHO CHARACTERS (0-37) NOT ECHOED
	POPJ P,

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    DEC's DDT.MAC

;ENTRY POINT FROM LISTEN.
;SEE IF A KL10, AND DO KL10 LISTEN IF SO.

XLISTT:	SKPKL			;[320] A KL10?
	JRST	XLIST2		;NOT KL, CHECK OTHER CPUS
	EXCH	TT,TT2		;SAVE TT
	PUSHJ	P,GVEPT		;GET EPT BASE IN TT
	  HALT	.-1		;[317] NOT IN ADDRESS SPACE!
	EXCH	TT,TT2		;PUT ADDRESS IN TT2
	SKIPN	DTEMTI(TT2)	;ANY INPUT YET?
	POPJ	P,		;NO
	MOVE	T,DTEF11(TT2)	;GET IT
	SETZM	DTEMTI(TT2)	;YES
	JRST	XLIST8		;AND CHAR DOWN AND RETURN
;STILL FTEXEC

;HERE IF NOT ON A KL10.  TRY A KS10.

XLIST2:	SKPKS			;ON A KS10?
	JRST	XLIST4		;NO, GO DO OLD (KA/KI) WAY
	MOVE	T,CTYIWD	;PICK UP INPUT WORD
	TXNN	T,CTYIRD	;ANYTHING THERE?
	POPJ	P,		;NO CHARACTER, RETURN CPOPJ0
	SETZM	CTYIWD		;YES, SAY WE GOT IT
	MOVE	TT2,SAVAPR	;GET APR STATE
	ANDI	TT2,7		;REDUCE TO PI ASSIGNMENT
	WRAPR	INT80(TT2)	;TELL 8080
	JRST	XLIST8		;AND CHAR DOWN AND GIVE GOOD RETURN
;HERE TO DO OLD STYLE (KA/KI) LISTEN TO REAL HARDWARE CTY

XLIST4:	CONSO	TTY,40		;DO KA OR KI TTY INPUT
	POPJ	P,		;NO CHARACTER
	DATAI	TTY,T		;READ IN PHYSICAL CHARACTER


;HERE FROM ALL CPU'S TO AND CHAR DOWN TO 7 BITS AND GIVE SKIP RETURN.

XLIST8:	ANDI	T,177		;STRIP OFF GARBAGE



;HERE TO TYPE THE CHAR IN AC T IF IN EXEC MODE.

XTOUT:	SKIPE	TTSUP		;SUPPRESSING OUTPUT?
	JRST	XTOUT8		;YES, JUST RETURN
	SKIPE	TTHLD		;[317] HOLDING OUTPUT (I.E., XOFF'ED)?
	JRST	[PUSHJ	P,XTYPA		;[317] YES, CHECK FOR "TYPEAHEAD" (XON)
		JRST	XTOUT]		;[317] SEE IF CLEAR YET

;FIRST CHECK FOR KA/KI STYLE I/O

	SKPKA			;ON A KA-10?
	SKPNKI			;OR A KI-10?
	CAIA			;YES TO ONE OF THE ABOVE
	JRST	XTOUT0		;NO, TRY OTHERS
	MOVE	TT2,T		;WORKING COPY OF CHARACTER
	IMULI	TT2,200401	;GENERATE PARITY
	AND	TT2,[11111111]
	IMUL	TT2,[11111111]
	TLNE	TT2,10
	TRC	T,200		;MAKE PARITY EVEN
	CONSZ	TTY,20
	JRST	.-1
	DATAO	TTY,T
	JRST	XTOUT8		;CLEAN UP AND RETURN

;CHECK TO SEE IF ON A KL10 AND DO KL10 XTOUT IF SO.

XTOUT0:	SKPKL			;KL10?
	JRST	XTOUT2		;NO, GO CHECK KS10
	EXCH	TT,TT2		;SAVE TT
	PUSHJ	P,GVEPT		;GET EPT BASE IN TT
	  HALT	.		;NOT IN ADDRESS SPACE!
	EXCH	TT,TT2		;PUT ADDRESS IN TT2
	MOVEI	T,.DTMTO(T)	;GET MONITOR OUTPUT COMMAND AND CHAR IN T
	MOVEM	T,DTECMD(TT2)	;PUT IN COMMAND WORD
	SETZM	DTEMTD(TT2)	;CLEAR DONE FLAG.
	XCT	DING11		;RING THE DOORBELL
	SKIPN	DTEMTD(TT2)	;DONE YET?
	JRST	.-1		;NO, LOOP
	JRST	XTOUT8		;YES, GO RESTORE CHAR AND RETURN
;STILL FTEXEC

;HERE IF NOT ON A KL10.  CHECK TO SEE IF WE ARE ON A KS10.

XTOUT2:	SKPKS			;KS-10?
	JRST	XTOUT4		;NO, GO CHECK OTHERS
	MOVE	TT2,CTYOWD	;ON A KS10, GET OUTPUT ADDRESS
	TXNN	TT2,CTYORD	;OUTPUT READY?
	JRST	XTOUT3		;YES
	MOVE	TT2,SAVAPR	;NO, GET APR STATE
	ANDI	TT2,7		;GET PI ASSIGNMENT
	WRAPR	INT80(TT2)	;INTERRUPT 8080
XTOUT3:	MOVE	TT2,CTYOWD	;OUTPUT WORD
	TXNE	TT2,CTYORD	;OUTPUT READY?
	JRST	XTOUT3		;NO WAIT
	IORI	T,CTYORD	;YES FLAG CHARACTER
	MOVEM	T,CTYOWD	;STORE CHARACTER FOR 8080
	MOVE	TT2,SAVAPR	;GET APR STATE
	ANDI	TT2,7		;REDUCE TO PI ASSIGNMENT
	WRAPR	INT80(TT2)	;NUDGE 8080
	JRST	XTOUT8		;GO RESTORE CHAR AND RETURN


;UNKNOWN PROCESSOR TYPE

XTOUT4:	HALT	.		;UNKNOWN
    