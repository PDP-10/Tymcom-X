TITLE CTYSIM - USE THE CTY TO SIMULATE A TYMNET LINE

	S$NAME='CTYSIM'

IFKMC,<
	BYP1==^D9		;RIGHTMOST BIT POSITION OF FIRST BYTE
	BYP2==^D17	;   0F SECOND BYTE OF A BUFFER RING WORD
	BYP3==^D27	;      THIRD BYTE
	BYP4==^D35	;      LAST BYTE POSITION IN A BUF RING WD
	OPDEF	UUILDB	[101000,,0]	;KMC ILDB
	OPDEF	UUIDPB	[102000,,0]	;KMC IDPB
	DEFINE	TYPI(TYPE)		;FOR LOADING TYPES WITH A
	<TYPE_^D8>			;	MOVSI INSTR
>;END IFKMC
IFNKMC,<
	BYP1==^D7		;RIGHTMOST BIT POSITION OF FIRST BYTE
	BYP2==^D15	;   0F SECOND BYTE OF A BUFFER RING WORD
	BYP3==^D23	;      THIRD BYTE
	BYP4==^D31	;      LAST BYTE POSITION IN A BUF RING WD
	OPDEF	UUILDB	[ILDB 0]	;NORMAL ILDB
	OPDEF	UUIDPB	[IDPB 0]	;NORMAL IDPB
	DEFINE	TYPI(TYPE)		;FOR LOADING TYPES WITH A
	<TYPE_^D10>			;	MOVSI INSTR
>;END IFNKMC


;THIS ROUTINE IS LINKED INTO THE CHANNEL 7 CODE TO MAKE
;SURE THAT THE CTY IS STARTED ON OUTPUT

CH7LK::	SKIPE	CTYACT		;IS THE CTY ACTUALLY DOING OUTPUT
	  JRST	.		;YES, CONTINUE DOWN CHAIN (FIXUP DONE LATER)
	MOVEM	T1,CH7SVT	;A PLACE TO SAVE AN AC
	MOVE	T1,ORPPDP
	CAME	T1,ORP620
IFCPU (<KS,KL>),<
	JRST	[SETOM CTYSTF	;SET SOFTWARE FLAG FOR "CONSO"
		 WRPI LI.REQ+<1B35>_<7-6> ;REQUEST IRP ON CH6
		 JRST .+1]
>;KSKL
IFCPU (<KI,F3>),<CONO TTY,TT.SOD+6>	;TTY INACTIVE AND OUTPUT RING NON-
				;EMPTY. START TTY. CAUSE INTERUPT
	MOVE	T1,CH7SVT
	JRST	CH7LK+1		;AND CONTINUE

;THIS ROUTINE IS LINKED INTO CH6 TO HANDLE TTY INTERUPTS

CH6LK::
IFCPU (<KI,F3>),<
	CONSO	TTY,TT.OD!TT.ID	;IS EITHER OUTPUT OR INPUT DONE?
	  JRST	.
	MOVEM	T4,CTSV+T4
	MOVEI	T4,CTSV
	BLT	T4,CTSV+T4-1	;SAVE ACS
	MOVE	P,[-20,,RETCTP]	;AND SET PUSHDOWN POINTER
	CONSO	TTY,TT.ID	;IS IT INPUT
	  JRST	CTYOUT		;NO, HANDLE OUTPUT
	DATAI	TTY,T1		;READ
>;END IFCPU (<KI,F3>)
IFCPU (KL),<
	CONSO	DTE,TO10DB	;DOORBELL FROM -11?
	  JRST	.		;NO, NEXT  PLEASE.
	CONO	DTE,CL11PT	;CLEAR IT NOW SO DON'T MISS ANOTHER (KLDCP DOESNT WAIT FOR IT TO CLEAR)
	MOVEM	T4,CTSV+T4	;SAVE AC'S
	MOVEI	T4,CTSV
	BLT	T4,CTSV+T4-1
	MOVE	P,[-20,,RETCTP]
	SETZ	T1,		;NOW CHECK FOR INPUT
	EXCH	T1,EPT+SPCMTI
	JUMPE	T1,CH6LK0	;NO INPUT, TRY OUTPUT
	MOVE	T1,EPT+SPCF11	;PICK UP INPUT CHAR
	ANDI	T1,377
	PUSHJ	P,CH6LK1	;DO INPUT PROCESSING
	SETZ	T1,
CH6LK0:	EXCH	T1,EPT+SPCMTD	;OUTPUT DONE?
	JUMPN	T1,CTYOUT	;GO IF YES
	POPJ	P,		;ELSE RETURN.

CH6LK1:>;END IFCPU (KL)

IFCPU (KS),<
	SKIPN	CTYINF		;DID FRONT END INTERRUPT?
	  JRST	.		;NO,NEXT PLEASE
	WRPI	LI.CPP+<1B35>_<7-6>	;CLEAR INTERRUPT ON CHANNEL 6
	MOVEM	T4,CTSV+T4	;SAVE ACS
	MOVEI	T4,CTSV
	BLT	T4,CTSV+T4-1
	MOVE	P,[-20,,RETCTP]	;AND SET PUSH DOWN POINTER
	SETZM	CTYINF		;CLEAR SOFTWARE FLAG
	SKIPN	T1,CTYIWD##	;SEE IF ANY INPUT
	  JRST	CH6LK0		;NO INPUT
	TRNN	T1,CTYIVL	;SKIP IF VALID CHAR
	  JRST	CH6LK0	;IF NOT GO CHECK FOR VALID OUTPUT
	SETZM	CTYIWD##	;GIVE WORD BACK TO THE 8080
	ANDI	T1,CTYICH	;GET CHAR ONLY
	PUSHJ	P,CH6LK1	;DO INPUT PROCESSING
CH6LK0:	SKIPN	T1,CTYOWD##	;CHECK IF OUTPUT DONE
	  JRST	CTYOUT		;YES,GO CHECK FOR MORE OUTPUT
	POPJ	P,

INTERNAL CTYINF
CTYINF:	0			;CTY INTERRUPT FLAG

CH6LK1:>;END IFCPU (KS)
	SKIPE	CTLZFL		;IS THIS THE CHR AFTER ^Z
	  JRST	CTLZH		;YES, SPECIAL ACTION
	CAIE	T1,"Z"-100	;IS IT ^Z
	CAIN	T1,"Z"-100+200	;OTHER PARITY CONTROL Z
	  JRST	CTLZN		;YES
NRMCH:	SKIPN	NOWIN		;IS THIS PORT LOGGED IN
	  POPJ	P,		;NO, RETURN
	MOVE	U,LINTAB##+10	;ALWAYS PORT 10
	LDB	T2,LDSRXE##	;ENABLED FOR REVERSE XON?
	JUMPE	T2,NRMCH1	;JUMP IF NOT.
	MOVE	T2,T1		;YES, MUST CHECK FOR ^Q OR ^S
	ANDI	T2,177
	CAIN	T2,"Q"-100
	  JRST	BKPOFF
	CAIN	T2,"S"-100
	  JRST	BKPON
NRMCH1:	MOVSI	T2,(BYTE (8)201,10)
	DPB	T1,[POINT 8,T2,23]	;PUT IN THE CHR
	PUSHJ	P,DEPO		;STORE IN INPUT RING
	  POPJ	P,		;COULD NOT STORE, IGNORE
	POPJ	P,		;FINISHED WITH INTERUPT

IFCPU (<KS,KL>),<
CH6KST::SKIPN	CTYSTF		;CH7 WANT US TO LOOK AT OUTPUT RING?
	  JRST	.		;NO.
	WRPI	LI.CPP+<1B35>_<7-6> ;YES. CLEAR PROGRAM REQUEST
	SETZM	CTYSTF		;AND SOFTWARE FLAG
	MOVEM	T4,CTSV+T4	;SAVE T4
	MOVEI	T4,CTSV
	BLT	T4,CTSV+T4-1
	MOVE	P,[-20,,RETCTP]
	JRST	CTYOUT		;GO DO OUTPUT RING PROCESSING.

CTYSTF:0
>;END IFCPU (<KS,KL>)


CTLZH:	ANDI	T1,177
	SETZM	CTLZFL
	CAIE	T1,"b"		; accept upper and lower case!
	CAIN	T1,"B"
CTYBRK:	  POPJ	P,		;A GOOD PLACE FOR A BREAKPOINT
	CAIN	T1,"?"		; needs help?
	JRST	[MOVE T1,[POINT 7,[ASCIZ /

CTYSIM commands (prefix with CTRL-Z)

    ?   This message
    B   Break-point (if set)
    H   Hangup
    L   Login
    O   Toggle ^O

/]]
		MOVEM	T1,STRFLG
		PJRST	CTYOUT]
	CAIE	T1,"o"
	CAIN	T1,"O"
	  PJRST	[SETCMM CTLOFG
		POPJ P,]
	CAIE	T1,"l"
	CAIN	T1,"L"
	  PJRST	LOGIN		;SIMULATE A LOGIN
	CAIE	T1,"h"
	CAIN	T1,"H"
	  PJRST	HNGUP		;SIMULATE A HANGUP
	CAIL	T1,"0"
	CAILE	T1,"9"
	  PJRST	NRMCH		;JUST INPUT CHR
	SUBI	T1,"0"
	MOVEM	T1,CTYFIL	;USE FOR FILL
	POPJ	P,

CTLZN:	SETOM	CTLZFL		;JUST SET FLAG
	POPJ	P,

RETCT:	MOVSI	T4,CTSV
	BLT	T4,T4
	JRST	CH6LK+1		;THIS IS THE INTERUPT DISMISS

LOGIN:	SKIPE	NOWIN		;IS IT ALREADY LOGGED IN?
	  POPJ	P,		;YES, IGNORE
	MOVSI	T2,(BYTE (8) 6,10)	; LOGIN TO PORT 10
	PUSHJ	P,DEPO
	 STOPCD
	MOVE	T2,[BYTE (8)204,10,14,13]	; TIC = 14, NODE 1327
	PUSHJ	P,DEPO
	 STOPCD
	MOVE	T2,[BYTE (8)27,0]	;SET NODE NO.
	PUSHJ	P,DEPO
	 STOPCD
	SETOM	NOWIN		;NOW ITS IN
	POPJ	P,

HNGUP:	MOVSI	T2,(BYTE (8) 13,10)
	SKIPE	NOWIN		;IGNORE IF NOT LOGGED IN
	 PUSHJ	P,DEPO		;ELSE TRY TO PUT IN INPUT RING
	  POPJ	P,
	POPJ	P,

BKPOFF:	SKIPN	BKPFLG		;IF ALREADY OFF,
	  JRST	NRMCH1		;TREAT AS NORMAL CHAR.
	MOVSI	T2,(BYTE (8)11,10)
	PUSHJ	P,DEPO
	  POPJ	P,		;DIDN'T TAKE.
	SETZM	BKPFLG		;OK, TELL OUTPUT ROUTINE OK TO START AGAIN.
	PJRST	CTYOUT		;GET OUTPUT STARTED AGAIN IF IN PROGRESS.

BKPON:	SKIPE	BKPFLG		;IF ALREADY ON,
	  JRST	NRMCH1		;TREAT AS NORMAL CHAR.
	MOVSI	T2,(BYTE (8)10,10)
	PUSHJ	P,DEPO
	  POPJ	P,		;DIDN'T WORK
	SETOM	BKPFLG		;TELL OUTPUT ROUTINE TO STOP
	POPJ	P,		;OK.

DEPO:	MOVE	T3,IRP620
DEPOC:	ADDI	T3,1
	ANDI	T3,MSKIRG	;WE ENTER AT DEPOC WITH T3 SET
	CAMN	T3,IRP620	;RING IS FULL IF SAME
	  POPJ	P,		;NON-SKIP RETURN IF FULL
IFKMC,<
	LSH	T2,-2		;SHIFT RIGHT 2
	HRRZ	T3,T2		;T3 = RIGHT HALF
	LSH	T3,-2		;SHIFT RIGHT HALF RIGHT 2 MORE BITS
	HRR	T2,T3		;T2 GETS NEW RIGHT HALF
>;END IFKMC
	MOVE	T3,IRP620
	MOVEM	T2,IRING(T3)
	ADDI	T3,1
	ANDI	T3,MSKIRG
	MOVEM	T3,IRP620
	AOS	(P)
	POPJ	P,

CTYOUT:	SKIPE	STRFLG
	  JRST	STRFIL
	SKIPE	CTOPNT		;ARE WE PROCESSING A STRING OF CHRS?
	  JRST	OSTCNT		;YES
	MOVE	T4,ORP620	;GET OUTPUR RING POINTER
CTOLP:	ANDI	T4,MSKORG	;THIS IS THE CONTINUE POINT
	CAMN	T4,ORPPDP
	  JRST	CTDNO		;OUTPUT IS DONE, RING EMPTY
	LDB	T1,[POINT 8,ORING(T4),BYP1]	;GET TYPE
	CAIG	T1,SZODS	;SEE IF A DISPATCH TYPE
	  XCT	CTOSPC(T1)	;YES, EXECUTE ON TYPE
	TRZN	T1,200		;SHOULD BE A DATA TYPE THEN
	 STOPCD			;IT IS NOT
	LDB	T2,[POINT 8,ORING(T4),BYP2]
	CAIE	T2,10
	  JRST	SKPSTR		;NOT FOR US, SKIP THIS STRING
	SKIPE	CTLOFG
	  JRST	SKPST2		;IGNORE STRING
	MOVEM	T1,CTOCNT
	MOVEI	T1,ORING(T4)
	HRLI	T1,(POINT 8,0,BYP2)
	MOVEM	T1,CTOPNT	;SET UP THE POINTER
	SETOM	CTYACT		;SET ACTIVE
	JRST	CTYSTR		;AND GO

OSTCNT:	SKIPE	BKPFLG		;IF REVERSE BACKPRESSURE IS ON,
	  POPJ	P,		;JUST FORGET IT TILL ITS TAKEN OFF.
	SKIPE	CTYRFL
	  JRST	OSTFIL		;SEND FILL CHRS
	SOSG	CTOCNT
	JRST	STRDON		;FINISHED IF OUT OF COUNT
CTYSTR:	UUILDB	T1,CTOPNT	;ENTER HERE TO START
CTYCH1:	IFCPU (<KI,F3>),<DATAO TTY,T1>
	IFCPU (<KS,KL>),<PUSHJ P,SPCOUT>
	ANDI	T1,177
	CAIN	T1,15		;IS IT RETURN
	SKIPN	T1,CTYFIL	;AND IS THERE A FILL NUMBER SET?
	  POPJ	P,		;FINISHED. (IGNORE CR DELAY)
	MOVEM	T1,CTYRFL	;YES, SET UP
	POPJ	P,

STRDON:	HRRZ	T4,CTOPNT
	SUBI	T4,ORING
	SETZM	CTOPNT		;CLEAR THE POINTER
SKT3:	AOJA	T4,CTOLP	;CONTINUE

CTDNO:	MOVEM	T4,ORP620	;PUT IT BACK
IFCPU (<KI,F3>),<CONO TTY,TT.COD+6>	;CLEAR OUTPUT DONE INTERUPT
	SETZM	CTYACT
	SETZM	CTLOFG
	POPJ	P,		;NOT ACTIVE AND DONE

OSTFIL:	SOS	CTYRFL		;FOR NEXT TIME
IFCPU (<KI,F3>),<DATAO TTY,[377]>
IFCPU (<KS,KL>),<
	MOVEI	T1,377
	PUSHJ	P,SPCOUT
>; End IFCPU (<KS,KL>)
	POPJ	P,

STRFIL:	SKIPE	CTYRFL		;ARE THERE FILL CHRS TO DO
	  JRST	OSTFIL		;YES
	ILDB	T1,STRFLG	;GET CHR
	SETOM	CTYACT
	JUMPN	T1,CTYCH1	;AND GO
	SETZM	STRFLG		;FINISHED
	PJRST	CTYOUT

IFCPU (KL),<
SPCOUT:	ANDI	T1,177		;GET RID OF JUNK
	MOVEI	T1,.DTCTO(T1)	;GET COMMAND FOR KLDCP
	MOVEM	T1,EPT+SPCCMW	;STORE
	CONO	DTE,TO11DB	;NOTIFY -11 OF CHAR PRESENT
	POPJ	P,		;AND RETURN, WILL GET INTERRUPT WHEN DONE.
>;END IFCPU (KL)

IFCPU (KS),<
SPCOUT:	ANDI	T1,CTYOCH	;ISOLATE CHARACTER
	TRO	T1,CTYOVL	;SET VALID FLAG
	MOVEM	T1,CTYOWD##	;STORE FOR CTY (8080)
	MOVEM	T1,SAVT1	;SAVE T1
	RDAPR	T1		;GET PROGRAM STATUS
	ANDI	T1,LP.PIA	;LEAVE ONLY PIA
	WRAPR	LP.SSF+LP.I8C(T1)	;WHAP THE 8080
	MOVE	T1,SAVT1	;RESTORE CHAR
	POPJ	P,

SAVT1:	0			;SAVE T1
>;END IFCPU (KS)


CTOSPC:  STOPCD			;0
	AOJA	T4,CTOLP	;1
	AOJA	T4,CTOLP	;2
	 STOPCD			;3
	 STOPCD			;4
	 STOPCD			;5
	 STOPCD			;6
	 STOPCD			;7
	JRST	BAKTRN		;10 BACKPRESSURE
	JRST	BAKTRN		;11 BACKPRESSURE
	JRST	GOBTRN		;12 CHR GOBBLER
	JRST	ZAPTRN		;13 CIRCUIT ZAPPER
	 STOPCD			;14
	 STOPCD			;15
	AOJA	T4,CTOLP	;16 IGNORE GREEN BALL
	AOJA	T4,CTOLP	;17 IGNORE RED BALL
	JRST	YELTRN		;20 YELLOW BALL
	JRST	ORGTRN		;21 ORANGE BALL
	 STOPCD			;22
	 STOPCD			;23
	 STOPCD			;24
	 STOPCD			;25
	JRST	SUPINI		;26 SUPERVISOR REQUEST
	 STOPCD			;27
	JRST	SUPCHR		;30 CHR TO SUPERVISOR
	 STOPCD			;31
	 STOPCD			;32
	AOJA	T4,SKT3		;33 IGNORE SAD MSG (2 WORDS)
	AOJA	T4,CTOLP	;34 IGNORE ECHO ON
	AOJA	T4,CTOLP	;35 AND OFF
	AOJA	T4,CTOLP	;36 AND TERM CHRS
	AOJA	T4,CTOLP	;37 AND PROBE
	 STOPCD			;40 BUT NOT RESP
	AOJA	T4,CTOLP	;41 NUMBER OF PORTS
	AOJA	T4,CTOLP	;42 AND CLOCK REQ
	 STOPCD			;43 BUT NOT CLOCK RESP
SZODS==.-CTOSPC-1

ZAPCIR:	LDB	T1,[POINT 8,ORING(T4),BYP2]	;GET PORT
	CAIE	T1,10
	  AOJA	T4,CTOLP	;FORGET IT
	MOVE	T1,[POINT 7,[ASCIZ /
please log in:  /]]
	MOVEM	T1,STRFLG
	ADDI	T4,1		;TO SKIP THE ZAPPER
	ANDI	T4,MSKORG
	MOVEM	T4,ORP620
	SETZM	NOWIN
	PJRST	CTYOUT		;GO

	;GET ORING WORD IN NON-KMC FORMAT TO T2
GORING:	MOVE	T2,ORING(T4)	;T2 <- NEXT WORD IN ORING
IFKMC,<
	LSH	T2,2		;SHIFT LEFT 2
	HLL	T2,ORING(T4)	;LAY IN THE LEFT HALF AGAIN
	LSH	T2,2		;NOW T2 LOOKS LIKE KL's ORING WORD
>;END IFKMC
	POPJ	P,


RSPORG:	PUSHJ	P,GORING	;[MOVE T2,ORING(T4) & KMC ADJ]
	TLO	T2,(BYTE (8) 1)
RSPOUT:	PUSHJ	P,DEPO		;CONVERT TO ORANGE AND RET
	  AOJA	T4,CTOLP
	AOJA	T4,CTOLP

SUPINI:	SKIPE	AXINP		;IS BUILDING ALREADY IN PROGRESS?
	  JRST	SUPBAD		;YES, SEND ERROR
	SETOM	AXINP		;YES, SET IT
	MOVE	T1,[POINT 7,AXSTR]
	MOVEM	T1,AXSTRP	;POINTER FOR STRING
	MOVEI	T1,^D12
	MOVEM	T1,AXCNT	;COUNT FOR USER NAME
	SETOM	AXNUM		;NOT GETTING SYSTEM NUMBER YET
	PUSHJ	P,GORING	;[MOVE T2,ORING(T4) & KMC ADJ]
	TLO	T2,(BYTE (8) 1)	;TURN IT INTO GOOD RESPONSE
	JRST	RSPOUT

SUPBAD:	PUSHJ	P,GORING	;[MOVE T2,ORING(T4) & KMC ADJ]
	TDO	T2,[BYTE (8) 1,0,1]
	JRST	RSPOUT		;TURN IT INTO AN ERROR

SUPCHR:	LDB	T1,[POINT 7,ORING(T4),BYP3]	;GET CHR
	CAIE	T1,15
	CAIN	T1,";"
	  JRST	SUPFIN		;FINISH UP
	SKIPL	AXNUM
	  JRST	SUPNUM		;GETTING SYSEM NUMBER
	CAIN	T1,":"
	  JRST	SUPSYS		;STARTING SYSTEM NUMBER
	SOSL	AXCNT
	IDPB	T1,AXSTRP	;SAVE PART OF USER NAME IF ROOM
	AOJA	T4,CTOLP

SUPSYS:	SETZM	AXNUM
	AOJA	T4,CTOLP

SUPNUM:	CAIG	T1,"9"
	CAIGE	T1,"0"
	  AOJA	T4,CTOLP	;IGNORE STRANGE CHR
	MOVE	T2,AXNUM
	IMULI	T2,^D10
	ADDI	T2,-"0"(T1)
	MOVEM	T2,AXNUM
	AOJA	T4,CTOLP

SUPFIN:	LDB	T1,[POINT 7,CONFIG,13]
	LDB	T2,[POINT 7,CONFIG,20]	;GET THIS SYSTEM NUMBER
	SUBI	T1,"0"
	IMULI	T1,^D10
	ADDI	T1,-"0"(T2)
	CAME	T1,AXNUM
	  JRST	SUPSYW		;WRONG SYSTEM

	MOVEI	T1,^D13
	SUB	T1,AXCNT
	LSH	T1,-1
	ADDI	T1,5		;GET SPACE IN INPUT RING REQUIRED
	PUSHJ	P,ISZCK		;CHECK SIZE
	 JRST	CTDNO		;NO, SAY FINISHED, WILL REENTER
	MOVEI	T1,0
	IDPB	T1,AXSTRP
	PUSHJ	P,GETPRT	;GET A PORT NUMBER
	 JRST	SUPSYW		;CAN NOT, SAY SYSTEM UNAVAIL
	MOVEI	T3,11(T1)
	PUSH	P,T3
	PUSHJ	P,GETPRC	;AND ANOTHER
	 JRST	SUPSWP		;CAN NOT GET 2
	MOVEI	T1,11(T1)
	POP	P,T3
	MOVEM	T3,PTRNTB-11(T1)
	MOVEM	T1,PTRNTB-11(T3)
	MOVSI	T2,(BYTE (8) 7)
	DPB	T3,[POINT 8,T2,15]
	LDB	T3,[POINT 8,ORING(T4),BYP2]	;GET PORT OF REQUESTER
	DPB	T3,[POINT 8,T2,23]	;AND PUT IN PORT REQUEST
	PUSHJ	P,DEPO
	 STOPCD				;SAY WHICH PORT
	MOVSI	T2,(BYTE (8) 27)
	LDB	T3,[POINT 8,ORING(T4),BYP2]
	DPB	T3,[POINT 8,T2,15]
	PUSHJ	P,DEPO			;AND NO ERROR
	 STOPCD
	MOVSI	T2,(BYTE (8) 6)
	DPB	T1,[POINT 8,T2,15]	;NOW LOG IN NEW PORT
	PUSHJ	P,DEPO
	 STOPCD
	MOVSI	T2,(BYTE (8) 202)
	DPB	T1,[POINT 8,T2,15]
	PUSHJ	P,DEPO
	 STOPCD
	PUSHJ	P,DEPO
	 STOPCD
	MOVE	T3,[POINT 7,AXSTR]
	MOVEM	T3,AXSTRP
STRLP:	ILDB	T3,AXSTRP
	JUMPE	T3,STRLP2
	DPB	T3,[POINT 8,T2,23]
	ILDB	T3,AXSTRP
	JUMPE	T3,STRLP3
	DPB	T3,[POINT 8,T2,31]
	PUSHJ	P,DEPO
	 STOPCD
	JRST	STRLP

STRLP3:	TLC	T2,(BYTE (8) 3)	;CHANGE TO 1 CHR
	PUSHJ	P,DEPO
	 STOPCD
STRLP2:	SETZM	AXINP
	AOJA	T4,CTOLP
SUPSWP:	POP	P,T3
SUPSYW:	LDB	T1,[POINT 8,ORING(T4),BYP2]
	MOVE	T2,[BYTE (8) 27,0,4]
	DPB	T1,[POINT 8,T2,15]
	PUSHJ	P,DEPO
	 JRST	CTDNO
	SETZM	AXINP
	AOJA	T4,CTOLP

GETPRT:	MOVSI	T1,-40
	SKIPN	PTRNTB(T1)
	 JRST	CPOPJ1
GETPRC:	AOBJN	T1,.-2
	POPJ	P,

ISZCK:	MOVE	T2,IRPPDP
	SUB	T2,IRP620
	SOJE	T2,CPOPJ	;NOT ENOUGH ROOM (0)
	SKIPGE	T2
	  ADDI	T2,MSKIRG+1
	CAML	T2,T1
	  AOS	(P)
	POPJ	P,

SKPSTR:	CAIL	T2,10
	CAILE	T2,50
	  JRST	SKPST2		;REALLY SKIP IT
	SKIPN	PTRNTB-11(T2)
	  JRST	SKPST2		;PORT NOT IN USE

	MOVEM	T1,CTOCNT
	MOVEI	T1,ORING(T4)
	HRLI	T1,(POINT 8,0,BYP2)
	MOVEM	T1,CTOPNT
	MOVE	T1,CTOCNT
	ADDI	T1,1
	LSH	T1,-1
	PUSHJ	P,ISZCK
	  JRST	CTDNO
	LDB	T1,[POINT 8,ORING(T4),BYP2]
	MOVE	T1,PTRNTB-11(T1)
	MOVSI	T2,(BYTE (8) 202)
	DPB	T1,[POINT 8,T2,15]
ATRLP:	SOSGE	CTOCNT
	  JRST	ATRLP1
	UUILDB	T1,CTOPNT
	DPB	T1,[POINT 8,T2,23]
	SOSGE	CTOCNT
	  JRST	ATRLP2
	UUILDB	T1,CTOPNT
	DPB	T1,[POINT 8,T2,31]
	PUSHJ	P,DEPO
	 STOPCD
	JRST	ATRLP

ATRLP2:	TLC	T2,(BYTE (8) 3)
	PUSHJ	P,DEPO
	 STOPCD
ATRLP1:	JRST	STRDON

SKPST2:	SUBI	T1,2
	SOJL	T1,SKT3
	LSH	T1,-2
	ADD	T4,T1
	AOJA	T4,SKT3

BAKTRN:	PUSHJ	P,GORING	;[MOVE T2,ORING(T4) & KMC ADJ]
	LDB	T1,[POINT 8,T2,15]
	CAILE	T1,10
	CAILE	T1,50
	  AOJA	T4,CTOLP
	SKIPN	T1,PTRNTB-11(T1)
	  AOJA	T4,CTOLP
	DPB	T1,[POINT 8,T2,15]
	PUSHJ	P,DEPO
	  JRST	CTDNO
	AOJA	T4,CTOLP

YELTRN:	LDB	T1,[POINT 8,ORING(T4),BYP2]
	CAIE	T1,10
	  JRST	BAKTRN
	JRST	RSPORG

ZAPTRN:	LDB	T1,[POINT 8,ORING(T4),BYP2]
	CAIN	T1,10
	  JRST	ZAPCIR
	CAIL	T1,10
	CAILE	T1,50
	  AOJA	T4,CTOLP
	SKIPN	T2,PTRNTB-11(T1)
	  AOJA	T4,CTOLP
	MOVE	T3,T2
	PUSHJ	P,GORING	;[MOVE T2,ORING(T4) & KMC ADJ]
	DPB	T3,[POINT 8,T2,15]
	PUSHJ	P,DEPO
	  JRST	CTDNO
	SETZM	PTRNTB-11(T1)
	AOJA	T4,CTOLP

GOBTRN:	LDB	T2,[POINT 8,ORING(T4),BYP2]
	CAIN	T2,10
	  SETZM	CTLOFG
	JRST	BAKTRN

ORGTRN:	JRST	BAKTRN

PTRNTB:	BLOCK	40
AXINP:	0
AXSTRP:	0
AXSTR:	BLOCK	3
AXCNT:	0
AXNUM:	0

EXTERNAL CPOPJ,CPOPJ1,CONFIG,EPT
CTYSET:	SKIPN	CTYDO
	  POPJ	P,		;DO NOT SET UP
IFCPU (<KI,KL>),<
	MOVSI	T1,(SKIPA)
	MOVEM	T1,CRSCHK##
>; END IFCPU (<KI,KL>)
	MOVSI	T1,(JFCL)
	MOVEM	T1,KEYSET	;TURN OFF BASE COMUNICATION
	MOVE	T1,[JEN @CH6]
	MOVEM	T1,CH6LK+1
	MOVE	T1,[JRST CH6LK]
IFCPU (<KS,KL>),<
	MOVEM	T1,CH6KST+1	;IF KL OR KS MAKE OUTPUT RING STARTER FIRST
	MOVE	T1,[JRST CH6KST]
>;END IFCPU (<KS,KL>)
	MOVEM	T1,CH6+1
	MOVE	T1,CH7+1
	MOVEM	T1,CH7LK+1
	MOVE	T1,[JRST CH7LK]
	MOVEM	T1,CH7+1
IFCPU (KL),<
	MOVE	T1,[JSR CH6]	;DTE INTERRUPT INSTRUCTION
	MOVEM	T1,EPT+EPTDT0+DTEDII
	CONO	DTE,PILDEN+6
>;END IFCPU (KL)
IFCPU (<KI,F3>),<CONO TTY,TT.COD!TT.CID+6>
IFCPU (KS),<WRAPR LP.ESF+LP.80C+APRCHN##>	;ENABLE THE CTY INTERRUPT
	MOVE	T1,[POINT 7,[ASCIZ /

Type CTRL-Z ? for help

please log in:  /]]
	MOVEM	T1,STRFLG	;Set pointer for initial LOGIN
	PJRST	CTYOUT		;Print the msg on the CTY (NOW!)

INTERNAL CTYSET,CTYBRK,NOWIN

EXTERNAL MSKORG,MSKIRG,IRING,ORING,ORP620,IRP620
EXTERNAL ORPPDP,IRPPDP,CH6,CH7,KEYSET

NOWIN:	0		;NON-ZERO IF LOGGED IN
BKPFLG:	0		;NON-ZERO IF "REMOTE" IS APPLYING BACKPRESSURE.
IFNDEF CTYVAL,<CTYVAL==0>
CTYDO:: CTYVAL
CTLZFL:	0		;CONTROL Z FLAG
CTLOFG:	0
STRFLG:	0		;HERE IF GENERATING A STRING (LIKE PLEASE LOG IN)
CTOPNT:	0		;OUTPUT POINTER
CTOCNT:	0		;AND COUNT
CTYACT:	0		;CTY OUTPUT ACTIVE
CH7SVT:	0		;SAVE LOC FOR CH7
CTYRFL:	0
CTYFIL:	0
CTSV:	BLOCK T4+1
RETCTP:	RETCT
	BLOCK 20	;PDL

	END
    